{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport Home from './components/Home';\nimport Test from './components/Test';\nimport Login from './components/Auth/Login.js';\nimport Register from './components/Auth/Register.js';\nimport Confirmation from './components/Auth/Confirmation.js';\nimport ResendEmail from './components/Auth/ConfirmationTypes/ResendEmail';\nimport Nav from './components/Nav';\nimport setAuthToken from './utils/setAuthToken';\nimport connect from \"react-redux/es/connect/connect\";\nimport PrivateRoute from './utils/checkAuth';\nimport { getCurrentUserData, requestUsers, requestUserData } from './store/actions';\nimport jwt_decode from \"jwt-decode\";\nimport ResetPass from \"./components/Auth/ResetPass\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: this.props.isLoggedIn,\n      userStatus: null\n    };\n    console.log(\">> APP C\", this.props.userStatus);\n  }\n\n  componentDidMount() {\n    if (this.props.isLoggedIn) this.props.requestUserData(this.props.userID);\n  }\n\n  componentWillMount() {// console.log('>> APP WM', this.props.userStatus);\n    // this.props.receiveUserData(this.props.userID);\n  }\n\n  render() {\n    // if(this.props.userStatus !== null && this.props.userStatus !== undefined && this.props.userStatus < 5) {\n    //     window.location.href = '/confirmation';\n    // }\n    if (this.props.isLoggedIn) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/test\",\n        component: Test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/reset/:secret\",\n        component: ResetPass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/confirmation/:secret\",\n        component: Confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), this.props.userStatus !== null && this.props.userStatus !== undefined && this.props.userStatus < 5 ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/confirmation\",\n        component: Confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/confirmation/reset-email\",\n        isResendEmail: true,\n        component: ResendEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"/\",\n        to: \"/confirmation\",\n        component: Confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"/*\",\n        to: \"/\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/test\",\n        component: Test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/reset/:secret?/\",\n        component: ResetPass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/register\",\n        component: Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }\n\n} // <Redirect from=\"/old-match\" to=\"/will-match\" />\n//<PrivateRoute\n//    path=\"/units\"\n//    component={Units}\n//    isLoggedIn={this.props.isLoggedIn}\n//    user={this.props.user}\n///>\n\n\nconst mapState = state => ({\n  user: state.authReducer.user,\n  userID: state.authReducer.userID,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  userStatus: state.authReducer.userStatus\n});\n\nconst mapDispatch = dispatch => ({\n  getCurrentUserData: data => dispatch(getCurrentUserData(data)),\n  requestUserData: data => dispatch(requestUserData(data))\n});\n\nexport default connect(mapState, mapDispatch)(App);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","Test","Login","Register","Confirmation","ResendEmail","Nav","setAuthToken","connect","PrivateRoute","getCurrentUserData","requestUsers","requestUserData","jwt_decode","ResetPass","App","Component","constructor","props","state","isLoggedIn","userStatus","console","log","componentDidMount","userID","componentWillMount","render","undefined","mapState","user","authReducer","mapDispatch","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport Home from './components/Home'\nimport Test from './components/Test'\nimport Login from './components/Auth/Login.js'\nimport Register from './components/Auth/Register.js'\nimport Confirmation from './components/Auth/Confirmation.js';\nimport ResendEmail from './components/Auth/ConfirmationTypes/ResendEmail';\nimport Nav from './components/Nav'\nimport setAuthToken from './utils/setAuthToken'\nimport connect from \"react-redux/es/connect/connect\";\nimport PrivateRoute from './utils/checkAuth';\nimport {getCurrentUserData, requestUsers, requestUserData} from './store/actions';\nimport jwt_decode from \"jwt-decode\";\nimport ResetPass from \"./components/Auth/ResetPass\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoggedIn: this.props.isLoggedIn,\n            userStatus: null\n        };\n\n        console.log(\">> APP C\", this.props.userStatus);\n    }\n\n    componentDidMount() {\n        if(this.props.isLoggedIn)\n            this.props.requestUserData(this.props.userID);\n    }\n\n    componentWillMount() {\n        // console.log('>> APP WM', this.props.userStatus);\n        // this.props.receiveUserData(this.props.userID);\n    }\n\n    render() {\n        // if(this.props.userStatus !== null && this.props.userStatus !== undefined && this.props.userStatus < 5) {\n        //     window.location.href = '/confirmation';\n        // }\n\n        if (this.props.isLoggedIn) {\n            return (\n                <React.Fragment>\n                    <Switch>\n                        <Route\n                            path=\"/test\"\n                            component={Test}\n                        />\n\n\n                        <Route\n                            path=\"/reset/:secret\"\n                            component={ResetPass}\n                        />\n\n                        <Route path=\"/confirmation/:secret\" component={Confirmation} />\n                        {\n                            (this.props.userStatus !== null && this.props.userStatus !== undefined && this.props.userStatus < 5)\n                                ?\n                                (\n                                    <React.Fragment>\n                                        <Route path=\"/confirmation\" component={Confirmation} />\n                                        <Route path=\"/confirmation/reset-email\" isResendEmail={true} component={ResendEmail} />\n                                        <Redirect from=\"/\" to=\"/confirmation\" component={Confirmation} />\n                                    </React.Fragment>\n                                )\n                                :\n                                (\n                                    <React.Fragment>\n                                        <Route\n                                            path=\"/\"\n                                            exact\n                                            component={Home}\n                                        />\n                                        <Redirect from=\"/*\" to=\"/\" component={Home} />\n                                    </React.Fragment>\n                                )\n                        }\n\n                    </Switch>\n                </React.Fragment>\n            )\n        } else {\n            return (\n                <React.Fragment>\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            component={Home}\n                        />\n                        <Route\n                            path=\"/test\"\n                            component={Test}\n                        />\n                        <Route\n                            path=\"/login\"\n                            component={Login}\n                        />\n\n                        <Route\n                            path=\"/reset/:secret?/\"\n                            component={ResetPass}\n                        />\n\n                        <Route\n                            path=\"/register\"\n                            component={Register}\n                        />\n                        <Redirect to='/' />\n                    </Switch>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\n// <Redirect from=\"/old-match\" to=\"/will-match\" />\n//<PrivateRoute\n//    path=\"/units\"\n//    component={Units}\n//    isLoggedIn={this.props.isLoggedIn}\n//    user={this.props.user}\n///>\n\n\nconst mapState = state => ({\n    user: state.authReducer.user,\n    userID: state.authReducer.userID,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    userStatus: state.authReducer.userStatus\n});\n\nconst mapDispatch = (dispatch) => ({\n    getCurrentUserData: data => dispatch(getCurrentUserData(data)),\n    requestUserData: data => dispatch(requestUserData(data))\n});\n\nexport default connect(mapState, mapDispatch)(App)"]},"metadata":{},"sourceType":"module"}