{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/utils/checkAuth.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { requestUsers, addUser } from \"../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass PrivateRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      component: this.props.component\n    };\n    console.log('>> component', this.state.component);\n  }\n\n  render() {\n    console.log('>> Render Units', this.props.units);\n\n    if (this.props.isLoggedIn) {\n      return React.createElement(Route, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Route, {\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapState = state => ({\n  isLoggedIn: state.authReducer.isLoggedIn\n}); // const mapDispatch = (dispatch) => ({\n//     requestUsers: data => {\n//         dispatch(requestUsers(data))\n//     },\n//     addUser: data => {\n//         dispatch(addUser(data))\n//     }\n// });\n\n\nexport default connect(mapState, null)(PrivateRoute);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/utils/checkAuth.js"],"names":["React","Component","axios","requestUsers","addUser","connect","BrowserRouter","Router","Switch","Route","Link","PrivateRoute","constructor","props","state","component","console","log","render","units","isLoggedIn","mapState","authReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,OAAtB,QAAoC,wBAApC;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;;AAEA,MAAMC,YAAN,SAA2BX,KAAK,CAACC,SAAjC,CAA2C;AACvCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE;AADb,KAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKH,KAAL,CAAWC,SAAvC;AACH;;AAEDG,EAAAA,MAAM,GAAE;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKJ,KAAL,CAAWM,KAA1C;;AAEA,QAAG,KAAKN,KAAL,CAAWO,UAAd,EAA0B;AACtB,aACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIO;AACH,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAvBsC;;AA0B3C,MAAMC,QAAQ,GAAGP,KAAK,KAAK;AACvBM,EAAAA,UAAU,EAAEN,KAAK,CAACQ,WAAN,CAAkBF;AADP,CAAL,CAAtB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAef,OAAO,CAACgB,QAAD,EAAW,IAAX,CAAP,CAAwBV,YAAxB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {requestUsers, addUser} from \"../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass PrivateRoute extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            component: this.props.component\n        };\n\n        console.log('>> component', this.state.component);\n    }\n\n    render(){\n        console.log('>> Render Units', this.props.units);\n\n        if(this.props.isLoggedIn) {\n            return (\n                <Route  />\n            )\n        } else {\n            return (\n                <Route path={\"/login\"} />\n            )\n        }\n    }\n}\n\nconst mapState = state => ({\n    isLoggedIn: state.authReducer.isLoggedIn\n});\n\n// const mapDispatch = (dispatch) => ({\n//     requestUsers: data => {\n//         dispatch(requestUsers(data))\n//     },\n//     addUser: data => {\n//         dispatch(addUser(data))\n//     }\n// });\n\nexport default connect(mapState, null)(PrivateRoute)"]},"metadata":{},"sourceType":"module"}