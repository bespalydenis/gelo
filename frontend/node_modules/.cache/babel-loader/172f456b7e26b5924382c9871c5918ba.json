{"ast":null,"code":"import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport { REQUEST_USERS, receiveUsers, ADD_USER, addUser, SET_CURRENT_USER, LOGIN, login, loginSuccess } from '../actions';\nimport axios from 'axios';\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt from \"jsonwebtoken\"; // LOGIN + AUTH TOKEN\n\nfunction callLogin(data) {\n  // let result = {};\n  // axios.post('/api/users/login', {email: data.email, password: data.password})\n  //     .then(res => {\n  //         localStorage.setItem('jwtToken', res.data.token);\n  //         setAuthToken(res.data.token);\n  //         result = res.body;\n  //         console.log('>> Login ID', res);\n  //     })\n  //     .catch(err => {\n  //         console.log('>>',err)\n  //     });\n  // return result;\n  // return axios.post({\n  //     method: 'post',\n  //     url: '/api/users/login'\n  // });\n  return axios.post('/api/users/login', {\n    email: data.email,\n    password: data.password\n  });\n}\n\nfunction* userLogin(action) {\n  try {\n    let responce = yield call(callLogin, action.data);\n    responce = yield responce.data;\n    console.log('>> responce', responce);\n\n    if (responce) {\n      console.log('have resp', responce);\n      yield put(loginSuccess(responce.data));\n    } else {\n      console.log('nhr', responce);\n    }\n  } catch (e) {\n    console.log('>> Login Error', e);\n  }\n}\n\nfunction fetchUnits(data) {\n  let result = [];\n  axios.get('/api/users/units', data).then(data => {\n    console.log('>> Success', data);\n    result = data;\n  }).catch(e => {\n    console.log('>> Error', e);\n  });\n  return result;\n}\n\nfunction* getUsers(action) {\n  try {\n    const response = yield call(fetchUnits, action.data);\n    const units = response.data;\n    yield put(receiveUsers(units));\n  } catch (e) {\n    yield put(receiveUsers('Test was success! Error!'));\n  }\n}\n\nfunction* addNewUser(action) {\n  console.log('>> ANU');\n\n  try {\n    // const response = yield call(fetchUnits, action.data);\n    // const units = response.data;\n    // console.log('>> unitsGet', action, data);\n    // yield put(receiveUsers(units));\n    axios.post('/api/users/register', action.data).then(res => {\n      console.log('>> addUser', res);\n    }).catch(errors => {\n      if (errors.response) {\n        console.log('>> E2');\n      } else if (errors.request) {\n        console.log('E', errors.request);\n      } else {\n        console.log('Error', errors.message);\n      }\n    });\n  } catch (e) {\n    yield put(receiveUsers('Test was success! Error!'));\n  }\n}\n\nfunction* watcher() {\n  yield takeLatest(REQUEST_USERS, getUsers);\n  yield takeLatest(ADD_USER, addNewUser);\n  yield takeLatest(LOGIN, userLogin);\n}\n\nexport default function* saga() {\n  yield all([watcher()]);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/store/saga/index.js"],"names":["takeLatest","all","put","call","REQUEST_USERS","receiveUsers","ADD_USER","addUser","SET_CURRENT_USER","LOGIN","login","loginSuccess","axios","setAuthToken","jwt","callLogin","data","post","email","password","userLogin","action","responce","console","log","e","fetchUnits","result","get","then","catch","getUsers","response","units","addNewUser","res","errors","request","message","watcher","saga"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport {REQUEST_USERS, receiveUsers, ADD_USER, addUser, SET_CURRENT_USER, LOGIN, login, loginSuccess} from '../actions';\nimport axios from 'axios'\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt from \"jsonwebtoken\";\n\n\n\n// LOGIN + AUTH TOKEN\nfunction callLogin(data) {\n    // let result = {};\n    // axios.post('/api/users/login', {email: data.email, password: data.password})\n    //     .then(res => {\n    //         localStorage.setItem('jwtToken', res.data.token);\n    //         setAuthToken(res.data.token);\n    //         result = res.body;\n    //         console.log('>> Login ID', res);\n    //     })\n    //     .catch(err => {\n    //         console.log('>>',err)\n    //     });\n    // return result;\n\n    // return axios.post({\n    //     method: 'post',\n    //     url: '/api/users/login'\n    // });\n\n    return axios.post('/api/users/login', {email: data.email, password: data.password});\n}\n\nfunction* userLogin(action) {\n    try {\n        let responce = yield call(callLogin, action.data);\n        responce = yield responce.data;\n        console.log('>> responce', responce);\n        if(responce) {\n            console.log('have resp', responce);\n            yield put(loginSuccess(responce.data))\n        } else {\n            console.log('nhr', responce);\n        }\n    } catch(e) {\n        console.log('>> Login Error', e);\n    }\n}\n\nfunction fetchUnits(data) {\n    let result = [];\n\n    axios.get('/api/users/units', data).then(data => {\n        console.log('>> Success', data);\n        result = data;\n    }).catch(e => {\n       console.log('>> Error', e);\n    });\n\n    return result;\n}\n\nfunction* getUsers(action) {\n    try {\n        const response = yield call(fetchUnits, action.data);\n        const units = response.data;\n        yield put(receiveUsers(units));\n    } catch(e) {\n        yield put(receiveUsers('Test was success! Error!'));\n    }\n}\n\nfunction* addNewUser(action) {\n    console.log('>> ANU');\n    try {\n        // const response = yield call(fetchUnits, action.data);\n        // const units = response.data;\n        // console.log('>> unitsGet', action, data);\n        // yield put(receiveUsers(units));\n\n        axios.post('/api/users/register', action.data)\n            .then(res => {\n                console.log('>> addUser', res);\n            })\n            .catch(errors => {\n                if (errors.response) {\n                   console.log('>> E2');\n                } else if (errors.request) {\n                    console.log('E', errors.request);\n                } else {\n                    console.log('Error', errors.message);\n                }\n            })\n    } catch(e) {\n        yield put(receiveUsers('Test was success! Error!'));\n    }\n}\n\n\nfunction* watcher() {\n    yield takeLatest(REQUEST_USERS, getUsers);\n    yield takeLatest(ADD_USER, addNewUser);\n    yield takeLatest(LOGIN, userLogin);\n}\n\nexport default function* saga() {\n    yield all([watcher()]);\n}"]},"metadata":{},"sourceType":"module"}