{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/* eslint-disable */\nimport { RECEIVE_USERS, SET_CURRENT_USER, ADD_USER, LOGIN, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT, RECEIVE_USER_UPDATE, UPDATE_USER_STATUS, SET_CURRENT_USER_DATA, SET_USER_STATUS, SET_USER_STATUS_SUCCESS, RECEIVE_USER_DATA, ADD_USER_ERROR } from '../actions';\n\nconst isEmpty = require('is-empty');\n\nconst initState = {\n  isLoggedIn: false,\n  currentUser: 'admin?',\n  units: null,\n  errors: null,\n  user: {},\n  access: 0,\n  loading: false,\n  userStatus: null,\n  userID: null\n};\nexport default ((state = initState, {\n  type,\n  data = \"default\"\n}) => {\n  switch (type) {\n    case RECEIVE_USERS:\n      return _objectSpread({}, state, {\n        units: data\n      });\n\n    case RECEIVE_USER_DATA:\n      return _objectSpread({}, state, {\n        user: data,\n        isAuthSession: false,\n        userStatus: data.status\n      });\n\n    case SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        isAuthSession: true,\n        userID: data.id,\n        userStatus: null\n      });\n\n    case LOGIN:\n      console.log('>> reducer Login', data);\n      return _objectSpread({}, state, {\n        userID: data.id,\n        userStatus: data.status\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        userID: data.user.data.id,\n        userStatus: data.user.data.status,\n        user: data.user.data\n      });\n\n    case LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        errors: data.errors\n      });\n\n    case RECEIVE_USER_UPDATE:\n      return _objectSpread({}, state);\n\n    case ADD_USER:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case ADD_USER_ERROR:\n      console.log('>> updatedResponce', data);\n      return _objectSpread({}, state, {\n        loading: false,\n        errors: data.errors\n      });\n\n    case UPDATE_USER_STATUS:\n      return _objectSpread({}, state, {\n        userStatus: data\n      });\n\n    case SET_CURRENT_USER_DATA:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        user: data,\n        userStatus: data.status,\n        userID: data.userID\n      });\n\n    case SET_USER_STATUS:\n      return _objectSpread({}, state);\n\n    case SET_USER_STATUS_SUCCESS:\n      console.log('>> SUSS', data);\n      return _objectSpread({}, state, {\n        userStatus: data.data.status,\n        user: data.data\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        user: null,\n        userID: null\n      });\n    //\n    // case USER_LOADING:\n    //     return {\n    //         ...state,\n    //         loading: true\n    //     };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/store/reducers/authReducer.js"],"names":["RECEIVE_USERS","SET_CURRENT_USER","ADD_USER","LOGIN","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","RECEIVE_USER_UPDATE","UPDATE_USER_STATUS","SET_CURRENT_USER_DATA","SET_USER_STATUS","SET_USER_STATUS_SUCCESS","RECEIVE_USER_DATA","ADD_USER_ERROR","isEmpty","require","initState","isLoggedIn","currentUser","units","errors","user","access","loading","userStatus","userID","state","type","data","isAuthSession","status","id","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport {\n    RECEIVE_USERS,\n    SET_CURRENT_USER,\n    ADD_USER,\n    LOGIN,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOGOUT,\n    RECEIVE_USER_UPDATE,\n    UPDATE_USER_STATUS,\n    SET_CURRENT_USER_DATA,\n    SET_USER_STATUS,\n    SET_USER_STATUS_SUCCESS,\n    RECEIVE_USER_DATA,\n    ADD_USER_ERROR\n} from '../actions';\n\nconst isEmpty = require('is-empty');\n\nconst initState = {\n    isLoggedIn: false,\n    currentUser: 'admin?',\n    units: null,\n    errors: null,\n    user: {},\n    access: 0,\n    loading: false,\n    userStatus: null,\n    userID: null\n};\n\nexport default (state = initState, {type, data = \"default\"}) => {\n    switch (type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                units: data\n            };\n\n        case RECEIVE_USER_DATA:\n            return {\n                ...state,\n                user: data,\n                isAuthSession: false,\n                userStatus: data.status\n            };\n\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isLoggedIn: true,\n                isAuthSession: true,\n                userID: data.id,\n                userStatus: null\n            };\n\n        case LOGIN:\n            console.log('>> reducer Login', data);\n            return {\n                ...state,\n                userID: data.id,\n                userStatus: data.status,\n            };\n\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                userID: data.user.data.id,\n                userStatus: data.user.data.status,\n                user: data.user.data\n            };\n\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                isLoggedIn: false,\n                errors: data.errors\n            };\n\n        case RECEIVE_USER_UPDATE:\n            return {\n                ...state\n            };\n\n        case ADD_USER:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case ADD_USER_ERROR:\n            console.log('>> updatedResponce', data);\n            return {\n                ...state,\n                loading: false,\n                errors: data.errors,\n            };\n\n        case UPDATE_USER_STATUS:\n            return {\n                ...state,\n                userStatus: data,\n            };\n\n\n        case SET_CURRENT_USER_DATA:\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: data,\n                userStatus: data.status,\n                userID: data.userID\n            };\n\n        case SET_USER_STATUS:\n            return {\n                ...state\n            };\n\n        case SET_USER_STATUS_SUCCESS:\n            console.log('>> SUSS', data);\n            return {\n                ...state,\n                userStatus: data.data.status,\n                user: data.data\n            };\n\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n                userID: null\n            };\n        //\n        // case USER_LOADING:\n        //     return {\n        //         ...state,\n        //         loading: true\n        //     };\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}