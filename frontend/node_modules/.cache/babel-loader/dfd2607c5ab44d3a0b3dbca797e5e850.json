{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Login.js\";\nimport React from 'react'; // import { connect } from \"react-redux\";\n\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt from 'jsonwebtoken';\nimport { requestUsers, login } from \"../../store/actions\";\nimport * as icons from '../../assets';\nimport './index.scss';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      function validateEmail(email) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n\n      if (validateEmail(this.state.email)) {\n        this.setState({\n          isValidEmail: true,\n          errors: {}\n        });\n      } else {\n        this.setState({\n          isValidEmail: false,\n          errors: {}\n        });\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.login(userData);\n    };\n\n    this.showPassword = e => {\n      this.setState({\n        isPasswordShow: !this.state.isPasswordShow\n      });\n    };\n\n    this.setKeepLogged = e => {\n      this.setState({\n        isKeepLogged: !this.state.isKeepLogged\n      });\n      console.log('>>', this.state.isKeepLogged);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isValidEmail: false,\n      isPasswordShow: false,\n      isKeepLogged: false\n    };\n  }\n\n  render() {\n    const errors = this.props.errors;\n    if (this.props.isLoggedIn) window.location.href = './';\n    return React.createElement(\"section\", {\n      className: \"auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cols\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col col2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"div\", {\n      className: \"authForm_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Don't have an account?\"), React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Sign Up!\"))), React.createElement(\"form\", {\n      className: \"authForm_body\",\n      autocomplete: \"on\",\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      onKeyUp: this.onChange,\n      value: this.state.email,\n      error: errors && errors.email,\n      placeholder: \"Your working email\",\n      onClick: this.onChange,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors && errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), errors && errors.email ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Email not found\") : null), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      onKeyUp: this.onChange,\n      value: this.state.password,\n      error: errors && errors.password,\n      id: \"password\",\n      placeholder: \"I know, it's our secret\",\n      type: this.state.isPasswordShow ? \"text\" : \"password\",\n      className: classnames(\"\", {\n        invalid: errors && errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), errors && errors.password ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Oops. That password isn't right. \", React.createElement(\"a\", {\n      href: \"/reset\",\n      className: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Recover your password?\")) : null, React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      className: \"showPassword\",\n      onClick: this.showPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons.EYE,\n      alt: \"\",\n      className: \"labelIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"authForm_checkinfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      style: {\n        background: \"url(\".concat(this.state.isKeepLogged ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.setKeepLogged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Keep me logged in\")), React.createElement(\"a\", {\n      href: \"/reset\",\n      className: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Forgot a password?\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: this.state.isValidEmail ? \"btn btn-blue\" : \"btn btn-blue btn-disabled\",\n      disabled: !this.state.isValidEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"button\", {\n      className: \"btn btn-google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons.GOOGLE,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), \"Login with Google\")))))));\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  userInfo: state.authReducer.user,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Login);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Login.js"],"names":["React","classnames","connect","Link","setAuthToken","jwt","requestUsers","login","icons","Login","Component","constructor","props","onChange","e","setState","target","id","value","validateEmail","email","re","test","state","isValidEmail","errors","onSubmit","preventDefault","userData","password","showPassword","isPasswordShow","setKeepLogged","isKeepLogged","console","log","render","isLoggedIn","window","location","href","invalid","EYE","background","CHECKBOX_ON","CHECKBOX","GOOGLE","mapState","currentUser","authReducer","userInfo","user","mapDispatch","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react'\n// import { connect } from \"react-redux\";\nimport classnames from \"classnames\"\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt from 'jsonwebtoken';\nimport {requestUsers, login} from \"../../store/actions\";\nimport * as icons from '../../assets';\nimport './index.scss';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            errors: {},\n            isValidEmail: false,\n            isPasswordShow: false,\n            isKeepLogged: false,\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n\n        function validateEmail(email) {\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(email);\n        }\n\n        if(validateEmail(this.state.email)) {\n            this.setState({\n                isValidEmail: true,\n                errors: {}\n            });\n        } else {\n            this.setState({\n                isValidEmail: false,\n                errors: {}\n            });\n        }\n    };\n\n    onSubmit = e => {\n      e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.login(userData);\n    };\n\n    showPassword = (e) => {\n        this.setState({ isPasswordShow: !this.state.isPasswordShow });\n    };\n\n    setKeepLogged = (e) => {\n        this.setState({ isKeepLogged: !this.state.isKeepLogged });\n        console.log('>>', this.state.isKeepLogged);\n    };\n\n    render() {\n        const errors = this.props.errors;\n\n        if(this.props.isLoggedIn)\n            window.location.href = './';\n\n        return (\n            <section className={\"auth\"}>\n                <div className=\"wr\">\n                    <div className=\"cols\">\n                        <div className=\"col col1\">\n\n                        </div>\n                        <div className=\"col col2\">\n                            <div className=\"authForm\">\n                                <div className=\"authForm_head\">\n                                    <div className=\"authForm_title\">Log In</div>\n                                    <div className=\"authForm_info\">\n                                        <p>Don't have an account?</p>\n                                        <Link to={\"/register\"}>Sign Up!</Link>\n                                    </div>\n                                </div>\n\n                                <form className={\"authForm_body\"} autocomplete=\"on\" noValidate onSubmit={this.onSubmit}>\n                                    <label>\n                                        <span>Email</span>\n                                        <input\n                                            onChange={this.onChange}\n                                            onKeyUp={this.onChange}\n                                            value={this.state.email}\n                                            error={errors && errors.email}\n                                            placeholder={\"Your working email\"}\n                                            onClick={this.onChange}\n                                            id={\"email\"}\n                                            type={\"email\"}\n                                            className={classnames(\"\", {\n                                                invalid: errors && errors.email\n                                            })}\n                                        />\n                                        {\n                                            errors && errors.email ? <p className={\"labelError\"}>Email not found</p> : null\n                                        }\n                                    </label>\n                                    <label>\n                                        <span>Password</span>\n                                        <input\n                                            onChange={this.onChange}\n                                            onKeyUp={this.onChange}\n                                            value={this.state.password}\n                                            error={errors && errors.password}\n                                            id={\"password\"}\n                                            placeholder={\"I know, it's our secret\"}\n                                            type={(this.state.isPasswordShow) ? \"text\" : \"password\"}\n                                            className={classnames(\"\", {\n                                                invalid: errors && errors.password\n                                            })}\n                                        />\n                                        {\n                                            errors && errors.password ? <p className={\"labelError\"}>Oops. That password isn't right. <a\n                                                href=\"/reset\" className={\"link\"}>Recover your password?</a></p> : null\n                                        }\n                                        <a href=\"javascript:void(0);\" className={\"showPassword\"} onClick={this.showPassword}>\n                                            <img src={icons.EYE} alt=\"\" className=\"labelIcon\"/>\n                                        </a>\n                                    </label>\n                                    <div className=\"authForm_checkinfo\">\n                                        <label>\n                                            <div className=\"checkbox\"\n                                                style={{\n                                                    background: `url(${(this.state.isKeepLogged) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                }}\n                                            ></div>\n                                            <input type=\"checkbox\" onClick={this.setKeepLogged}/>\n                                            <span>Keep me logged in</span>\n                                        </label>\n                                        <a href=\"/reset\" className=\"link\">Forgot a password?</a>\n                                    </div>\n                                    <button\n                                        type={\"submit\"}\n                                        className={this.state.isValidEmail ? \"btn btn-blue\" : \"btn btn-blue btn-disabled\"}\n                                        disabled={!this.state.isValidEmail}\n\n                                    >\n                                        Login\n                                    </button>\n                                    <button className=\"btn btn-google\">\n                                        <img src={icons.GOOGLE} alt=\"\"/>\n                                        Login with Google\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    userInfo: state.authReducer.user,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(Login)\n"]},"metadata":{},"sourceType":"module"}