{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reducer from \"./store/reducers\";\nimport rootSaga from \"./store/saga\";\nimport { createLogger } from 'redux-logger';\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from 'jwt-decode';\nimport setCurrentUser from './store/actions';\nconst sagaMiddleware = createSagaMiddleware();\nconst logger = createLogger({\n  level: \"log\",\n  duration: false,\n  timestamp: false,\n  collapsed: true\n});\n/* eslint-disable no-underscore-dangle */\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware, logger));\n/* eslint-enable */\n\nsagaMiddleware.run(rootSaga);\n\nif (localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  const decoded = jwt_decode(token);\n  console.log('>> TOKEN', decoded);\n  store.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    window.location.href = './';\n  }\n}\n\nconst app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})));\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/index.js"],"names":["React","ReactDOM","Provider","App","BrowserRouter","serviceWorker","createSagaMiddleware","applyMiddleware","createStore","reducer","rootSaga","createLogger","setAuthToken","jwt_decode","setCurrentUser","sagaMiddleware","logger","level","duration","timestamp","collapsed","store","run","localStorage","jwtToken","token","decoded","console","log","dispatch","currentTime","Date","now","exp","window","location","href","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AAEA,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AAEA,MAAMU,MAAM,GAAGL,YAAY,CAAC;AACxBM,EAAAA,KAAK,EAAE,KADiB;AAExBC,EAAAA,QAAQ,EAAE,KAFc;AAGxBC,EAAAA,SAAS,EAAE,KAHa;AAIxBC,EAAAA,SAAS,EAAE;AAJa,CAAD,CAA3B;AAOA;;AACA,MAAMC,KAAK,GAAGb,WAAW,CACrBC,OADqB,EAErBF,eAAe,CAACQ,cAAD,EAAiBC,MAAjB,CAFM,CAAzB;AAIA;;AAEAD,cAAc,CAACO,GAAf,CAAmBZ,QAAnB;;AAEA,IAAIa,YAAY,CAACC,QAAjB,EAA2B;AACvB,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AAEAZ,EAAAA,YAAY,CAACa,KAAD,CAAZ;AAEA,QAAMC,OAAO,GAAGb,UAAU,CAACY,KAAD,CAA1B;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB;AACAL,EAAAA,KAAK,CAACQ,QAAN,CAAef,cAAc,CAACY,OAAD,CAA7B;AAEA,QAAMI,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAGN,OAAO,CAACO,GAAR,GAAcH,WAAjB,EAA8B;AAC1BI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AACH;AACJ;;AAED,MAAMC,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEhB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAQApB,QAAQ,CAACqC,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AACAnC,aAAa,CAACoC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport createSagaMiddleware from \"redux-saga\";\nimport {applyMiddleware, createStore} from \"redux\";\nimport reducer from \"./store/reducers\";\nimport rootSaga from \"./store/saga\";\nimport { createLogger } from 'redux-logger';\nimport setAuthToken from \"./utils/setAuthToken\";\nimport jwt_decode from 'jwt-decode';\nimport setCurrentUser from './store/actions';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst logger = createLogger({\n    level: \"log\",\n    duration: false,\n    timestamp: false,\n    collapsed: true\n});\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware, logger)\n);\n/* eslint-enable */\n\nsagaMiddleware.run(rootSaga);\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n\n    setAuthToken(token);\n\n    const decoded = jwt_decode(token);\n\n    console.log('>> TOKEN', decoded);\n    store.dispatch(setCurrentUser(decoded));\n\n    const currentTime = Date.now() / 1000;\n    if(decoded.exp < currentTime) {\n        window.location.href = './';\n    }\n}\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}