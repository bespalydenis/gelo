{"ast":null,"code":"import _objectWithoutProperties from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/utils/checkAuth.js\";\nimport Route from 'react-dom';\nexport default function PrivateRoute(_ref) {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => props.isLoggedIn ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/utils/checkAuth.js"],"names":["Route","PrivateRoute","Component","component","rest","props","isLoggedIn","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,WAAlB;AAEA,eAAe,SAASC,YAAT,OAAyD;AAAA,MAAtBC,SAAsB,QAAjCC,SAAiC;AAAA,MAARC,IAAQ;;AACpE,SACI,oBAAC,KAAD,oBAEQA,IAFR;AAGI,IAAA,MAAM,EAAEC,KAAK,IACTA,KAAK,CAACC,UAAN,GAAqB,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB,GAAoD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAb;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH","sourcesContent":["import Route from 'react-dom';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n\n            {...rest}\n            render={props =>\n                props.isLoggedIn ? ( <Component {...props} /> ) : ( <Redirect to={{ pathname: '/login', state: {from: props.location} }} /> )\n            }\n\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}