{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/ResendEmail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { login, setUserStatus } from \"../../../store/actions\";\nimport * as icons from '../../../assets';\nimport '../index.scss';\n\nclass ResendEmail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userStatus: this.props.userStatus\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Didn\\u2019t get an email?\")), React.createElement(\"div\", {\n      className: \"authFooter authFooter-confirmation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: '600'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"If you don\\u2019t see an email from us within a few minutes, a few things could have happened:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"- The email is in your spam folder;\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"- The email address you entered had a mistake or typo;\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"- You accidentally gave us another email address;\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"- We can\\u2019t deliver the email to this address.\")), React.createElement(\"button\", {\n      className: \"btn btn-blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Re-enter email\")));\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  user: state.authReducer.user,\n  userStatus: state.authReducer.userStatus,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  },\n  setUserStatus: data => {\n    dispatch(setUserStatus(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(ResendEmail);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/ResendEmail.js"],"names":["React","connect","login","setUserStatus","icons","ResendEmail","Component","constructor","props","state","userStatus","render","fontWeight","mapState","currentUser","authReducer","isLoggedIn","user","errors","mapDispatch","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,aAAf,QAAmC,wBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AACA,OAAO,eAAP;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AADd,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAJJ,CAHJ,EASI;AAAQ,MAAA,SAAS,EAAE,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,CAJJ,CADJ;AAkBH;;AA5BqC;;AA+B1C,MAAMC,QAAQ,GAAIJ,KAAD,KAAY;AACzBK,EAAAA,WAAW,EAAEL,KAAK,CAACM,WAAN,CAAkBD,WADN;AAEzBE,EAAAA,UAAU,EAAEP,KAAK,CAACM,WAAN,CAAkBC,UAFL;AAGzBC,EAAAA,IAAI,EAAER,KAAK,CAACM,WAAN,CAAkBE,IAHC;AAIzBP,EAAAA,UAAU,EAAED,KAAK,CAACM,WAAN,CAAkBL,UAJL;AAKzBQ,EAAAA,MAAM,EAAET,KAAK,CAACM,WAAN,CAAkBG;AALD,CAAZ,CAAjB;;AAQA,MAAMC,WAAW,GAAIC,QAAD,KAAe;AAC/BlB,EAAAA,KAAK,EAAEmB,IAAI,IAAI;AACXD,IAAAA,QAAQ,CAAClB,KAAK,CAACmB,IAAD,CAAN,CAAR;AACH,GAH8B;AAI/BlB,EAAAA,aAAa,EAAEkB,IAAI,IAAI;AACnBD,IAAAA,QAAQ,CAACjB,aAAa,CAACkB,IAAD,CAAd,CAAR;AACH;AAN8B,CAAf,CAApB;;AAUA,eAAepB,OAAO,CAACY,QAAD,EAAWM,WAAX,CAAP,CAA+Bd,WAA/B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {login, setUserStatus} from \"../../../store/actions\";\nimport * as icons from '../../../assets';\nimport '../index.scss';\n\nclass ResendEmail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userStatus: this.props.userStatus\n        };\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"authForm_head\">\n                    <div className=\"authForm_title\">Didn’t get an email?</div>\n                </div>\n                <div className=\"authFooter authFooter-confirmation\">\n                    <p style={{ fontWeight: '600' }}>If you don’t see an email from us within a few minutes, a few things could\n                        have happened:</p>\n                    <ul>\n                        <li>- The email is in your spam folder;</li>\n                        <li>- The email address you entered had a mistake or typo;</li>\n                        <li>- You accidentally gave us another email address;</li>\n                        <li>- We can’t deliver the email to this address.</li>\n                    </ul>\n                    <button className={\"btn btn-blue\"}>Re-enter email</button>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    user: state.authReducer.user,\n    userStatus: state.authReducer.userStatus,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    },\n    setUserStatus: data => {\n        dispatch(setUserStatus(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(ResendEmail)"]},"metadata":{},"sourceType":"module"}