{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/Step/Step4.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { login, setUserStatus, requestUserData } from \"../../../../store/actions\";\nimport * as icons from '../../../../assets';\nimport '../../index.scss';\nimport Select from 'react-select';\nimport axios from \"axios\";\n\nclass Step3 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAvailable = e => {\n      if (this.state.isAvailable) {\n        this.setState({\n          isAvailable: false\n        });\n      } else {\n        this.setState({\n          isAvailable: true\n        });\n      }\n    };\n\n    this.handleNextStep = e => {\n      e.preventDefault();\n      axios.post('/api/users/completeStep4', {\n        id: this.props.userID,\n        meta: this.state\n      }).then(result => {\n        this.props.setUserStatus({\n          id: this.props.userID,\n          status: 5\n        }); //window.location.href = '/';\n      });\n    };\n\n    this.prevStep = e => {\n      e.preventDefault();\n      this.props.setUserStatus({\n        id: this.props.userID,\n        status: this.props.user.status - 1\n      });\n    };\n\n    this.setDayAvailable = e => {\n      console.log('>> e', e.target);\n      this.setState({\n        schedule: _objectSpread({}, this.state.schedule, {\n          [e.target.id]: {\n            isAvailable: !this.state.schedule[e.target.id].isAvailable\n          }\n        })\n      });\n    };\n\n    this.setMondayFrom = selected => {\n      this.setState({\n        schedule: _objectSpread({}, this.state.schedule, {\n          monday: _objectSpread({}, this.state.schedule.monday, {\n            from: selected\n          })\n        })\n      });\n    };\n\n    this.state = {\n      userStatus: this.props.user.status,\n      isAvailable: false || this.props.user.isAvailable,\n      schedule: {\n        monday: {\n          isAvailable: true,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        tuesday: {\n          isAvailable: true,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        wednesday: {\n          isAvailable: true,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        thursday: {\n          isAvailable: true,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        friday: {\n          isAvailable: true,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        saturday: {\n          isAvailable: false,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        },\n        sunday: {\n          isAvailable: false,\n          from: {\n            value: 9,\n            label: '9:00'\n          },\n          to: {\n            value: 18,\n            label: '18:00'\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUserData(this.props.userID);\n  }\n\n  render() {\n    const options = [{\n      value: '0',\n      label: '0:00'\n    }, {\n      value: '1',\n      label: '1:00'\n    }, {\n      value: '2',\n      label: '2:00'\n    }, {\n      value: '3',\n      label: '3:00'\n    }, {\n      value: '4',\n      label: '4:00'\n    }, {\n      value: '5',\n      label: '5:00'\n    }, {\n      value: '6',\n      label: '6:00'\n    }, {\n      value: '7',\n      label: '7:00'\n    }, {\n      value: '8',\n      label: '8:00'\n    }, {\n      value: '9',\n      label: '9:00'\n    }, {\n      value: '10',\n      label: '10:00'\n    }, {\n      value: '11',\n      label: '11:00'\n    }, {\n      value: '12',\n      label: '12:00'\n    }, {\n      value: '13',\n      label: '13:00'\n    }, {\n      value: '14',\n      label: '14:00'\n    }, {\n      value: '15',\n      label: '15:00'\n    }, {\n      value: '16',\n      label: '16:00'\n    }, {\n      value: '17',\n      label: '17:00'\n    }, {\n      value: '18',\n      label: '18:00'\n    }, {\n      value: '19',\n      label: '19:00'\n    }, {\n      value: '20',\n      label: '20:00'\n    }, {\n      value: '21',\n      label: '21:00'\n    }, {\n      value: '22',\n      label: '22:00'\n    }, {\n      value: '23',\n      label: '23:00'\n    }];\n    const customStyles = {\n      option: (provided, {\n        data,\n        isDisabled,\n        isSelected,\n        isFocused\n      }) => _objectSpread({}, provided, {\n        height: 40,\n        backgroundColor: isDisabled ? null : isSelected ? '#F4F8FF' : null,\n        color: isSelected ? '#162B5B' : isFocused ? '#3260CC' : '#162B5B',\n        paddingLeft: 19,\n        paddingRight: 19\n      }),\n      valueContainer: provided => _objectSpread({}, provided, {\n        height: 50,\n        width: 120 - 29,\n        fontSize: 16,\n        paddingLeft: 19,\n        paddingRight: 19,\n        borderColor: '#CCD3E3'\n      }),\n      container: provided => _objectSpread({}, provided, {\n        fontSize: 16,\n        border: 'none !important',\n        borderColor: '#CCD3E3'\n      }),\n      control: provided => _objectSpread({}, provided, {\n        borderBottom: '1px solid #CCD3E3 !important',\n        borderLeft: '1px solid #CCD3E3 !important',\n        borderTop: '1px solid #CCD3E3 !important',\n        borderRight: '1px solid #CCD3E3 !important'\n      }),\n      dropdownIndicator: provided => _objectSpread({}, provided, {\n        padding: 0,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      indicatorsContainer: provided => _objectSpread({}, provided, {\n        width: 29,\n        position: 'relative',\n        right: 0,\n        borderLeft: '1px solid #CCD3E3',\n        backgroundColor: '#f5f6f9',\n        borderRadius: '0 4px 4px 0'\n      }),\n      indicatorSeparator: provided => _objectSpread({}, provided, {\n        display: 'none !important'\n      }),\n      input: provided => _objectSpread({}, provided, {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        padding: 0,\n        margin: 0\n      })\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Personal settings\"), React.createElement(\"p\", {\n      className: \"currentStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Step 4 of 4\")), React.createElement(\"div\", {\n      className: \"authForm_body authForm_steps authForm_steps-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: this.state.isAvailable ? \"label-activs active\" : \"label-activs\",\n      onClick: this.handleAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"activs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"activs-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Set available\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Let us know when you\\u2019re typically available to work\"))), this.state.isAvailable ? React.createElement(\"div\", {\n      className: \"schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"schedule_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Available days\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"To\")), React.createElement(\"div\", {\n      className: \"schedule_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.monday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"monday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.monday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), \"Monday\"), React.createElement(Select, {\n      options: options,\n      \"data-day\": \"monday\",\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            monday: _objectSpread({}, this.state.schedule.monday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.monday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            monday: _objectSpread({}, this.state.schedule.monday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.monday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.tuesday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"tuesday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.tuesday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), \"Tuesday\"), React.createElement(Select, {\n      options: options,\n      \"data-day\": \"tuesday\",\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            tuesday: _objectSpread({}, this.state.schedule.tuesday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.tuesday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            tuesday: _objectSpread({}, this.state.schedule.tuesday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.tuesday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.wednesday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"wednesday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.wednesday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), \"Wednesday\"), React.createElement(Select, {\n      options: options,\n      \"data-day\": \"wednesday\",\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            wednesday: _objectSpread({}, this.state.schedule.wednesday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.wednesday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            wednesday: _objectSpread({}, this.state.schedule.wednesday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.wednesday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.thursday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"thursday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.thursday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), \"Thursday\"), React.createElement(Select, {\n      options: options,\n      \"data-day\": \"thursday\",\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            thursday: _objectSpread({}, this.state.schedule.thursday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.thursday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            thursday: _objectSpread({}, this.state.schedule.thursday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.thursday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.friday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"friday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.friday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), \"Friday\"), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            friday: _objectSpread({}, this.state.schedule.friday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.friday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            friday: _objectSpread({}, this.state.schedule.friday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.friday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.saturday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"saturday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.saturday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), \"Saturday\"), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            saturday: _objectSpread({}, this.state.schedule.saturday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.saturday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            saturday: _objectSpread({}, this.state.schedule.saturday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.saturday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"schedule_day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.schedule.sunday.isAvailable ? \"daily active\" : \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox\",\n      id: \"sunday\",\n      onClick: this.setDayAvailable,\n      style: {\n        background: \"url(\".concat(this.state.schedule.sunday.isAvailable ? icons.CHECKBOX_ON : icons.CHECKBOX, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), \"Sunday\"), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            sunday: _objectSpread({}, this.state.schedule.sunday, {\n              from: selected\n            })\n          })\n        });\n      },\n      value: this.state.schedule.sunday.from,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: options,\n      onChange: selected => {\n        this.setState({\n          schedule: _objectSpread({}, this.state.schedule, {\n            sunday: _objectSpread({}, this.state.schedule.sunday, {\n              to: {\n                value: selected.value,\n                label: \"\".concat(selected.value, \":00\")\n              }\n            })\n          })\n        });\n      },\n      value: this.state.schedule.sunday.to,\n      styles: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })))) : null, React.createElement(\"button\", {\n      className: \"btn btn-blue btn-continue\",\n      onClick: this.handleNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: \"stepActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"stepActions_prev\",\n      onClick: this.prevStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Back to previous step\"), React.createElement(\"a\", {\n      className: \"stepActions_skip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  user: state.authReducer.user,\n  userID: state.authReducer.userID,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  },\n  setUserStatus: data => {\n    dispatch(setUserStatus(data));\n  },\n  requestUserData: data => {\n    dispatch(requestUserData(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Step3);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/Step/Step4.js"],"names":["React","connect","login","setUserStatus","requestUserData","icons","Select","axios","Step3","Component","constructor","props","handleAvailable","e","state","isAvailable","setState","handleNextStep","preventDefault","post","id","userID","meta","then","result","status","prevStep","user","setDayAvailable","console","log","target","schedule","setMondayFrom","selected","monday","from","userStatus","value","label","to","tuesday","wednesday","thursday","friday","saturday","sunday","componentDidMount","render","options","customStyles","option","provided","data","isDisabled","isSelected","isFocused","height","backgroundColor","color","paddingLeft","paddingRight","valueContainer","width","fontSize","borderColor","container","border","control","borderBottom","borderLeft","borderTop","borderRight","dropdownIndicator","padding","display","justifyContent","alignItems","indicatorsContainer","position","right","borderRadius","indicatorSeparator","input","margin","background","CHECKBOX_ON","CHECKBOX","mapState","currentUser","authReducer","isLoggedIn","errors","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {login, setUserStatus, requestUserData} from \"../../../../store/actions\";\nimport * as icons from '../../../../assets';\nimport '../../index.scss';\nimport Select from 'react-select'\nimport axios from \"axios\";\n\nclass Step3 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userStatus: this.props.user.status,\n            isAvailable: false || this.props.user.isAvailable,\n            schedule: {\n                monday: {\n                    isAvailable: true,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                tuesday: {\n                    isAvailable: true,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                wednesday: {\n                    isAvailable: true,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                thursday: {\n                    isAvailable: true,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                friday: {\n                    isAvailable: true,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                saturday: {\n                    isAvailable: false,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n                sunday: {\n                    isAvailable: false,\n                    from: { value: 9, label: '9:00' },\n                    to: { value: 18, label: '18:00' }\n                },\n            }\n        };\n    }\n\n\n    componentDidMount() {\n        this.props.requestUserData(this.props.userID);\n    }\n    handleAvailable = (e) => {\n        if (this.state.isAvailable) {\n            this.setState({\n                isAvailable: false\n            });\n        } else {\n            this.setState({\n                isAvailable: true\n            });\n        }\n    };\n\n    handleNextStep = (e) => {\n        e.preventDefault();\n\n        axios.post('/api/users/completeStep4', {id: this.props.userID, meta: this.state}).then(result => {\n            this.props.setUserStatus({ id: this.props.userID, status: 5 });\n            //window.location.href = '/';\n        });\n    };\n\n    prevStep = (e) => {\n        e.preventDefault();\n\n        this.props.setUserStatus({\n            id: this.props.userID,\n            status: this.props.user.status - 1\n        })\n    };\n\n    setDayAvailable = (e) => {\n        console.log('>> e', e.target);\n        this.setState({\n           schedule: {\n               ...this.state.schedule,\n               [e.target.id]: {\n                   isAvailable: !this.state.schedule[e.target.id].isAvailable\n               }\n           }\n        });\n    };\n\n    setMondayFrom = (selected) => {\n        this.setState({\n            schedule: {\n                ...this.state.schedule,\n                monday: {\n                    ...this.state.schedule.monday,\n                    from: selected\n                }\n            }\n        })\n    };\n\n    render() {\n        const options = [\n            { value: '0', label: '0:00' },\n            { value: '1', label: '1:00' },\n            { value: '2', label: '2:00' },\n            { value: '3', label: '3:00' },\n            { value: '4', label: '4:00' },\n            { value: '5', label: '5:00' },\n            { value: '6', label: '6:00' },\n            { value: '7', label: '7:00' },\n            { value: '8', label: '8:00' },\n            { value: '9', label: '9:00' },\n            { value: '10', label: '10:00' },\n            { value: '11', label: '11:00' },\n            { value: '12', label: '12:00' },\n            { value: '13', label: '13:00' },\n            { value: '14', label: '14:00' },\n            { value: '15', label: '15:00' },\n            { value: '16', label: '16:00' },\n            { value: '17', label: '17:00' },\n            { value: '18', label: '18:00' },\n            { value: '19', label: '19:00' },\n            { value: '20', label: '20:00' },\n            { value: '21', label: '21:00' },\n            { value: '22', label: '22:00' },\n            { value: '23', label: '23:00' },\n        ];\n\n        const customStyles = {\n            option: (provided, { data, isDisabled, isSelected, isFocused }) => ({\n                ...provided,\n                height: 40,\n                backgroundColor: isDisabled\n                    ? null\n                    : isSelected\n                        ? '#F4F8FF'\n                        : null,\n                color: isSelected ? '#162B5B' : isFocused ? '#3260CC' : '#162B5B',\n                paddingLeft: 19,\n                paddingRight: 19,\n            }),\n            valueContainer: (provided) => ({\n                ...provided,\n                height: 50,\n                width: 120 - 29,\n                fontSize: 16,\n                paddingLeft: 19,\n                paddingRight: 19,\n                borderColor: '#CCD3E3'\n            }),\n            container: (provided) => ({\n                ...provided,\n                fontSize: 16,\n                border: 'none !important',\n                borderColor: '#CCD3E3'\n            }),\n            control: (provided) => ({\n                ...provided,\n                borderBottom: '1px solid #CCD3E3 !important',\n                borderLeft: '1px solid #CCD3E3 !important',\n                borderTop: '1px solid #CCD3E3 !important',\n                borderRight: '1px solid #CCD3E3 !important',\n            }),\n            dropdownIndicator: (provided) => ({\n                ...provided,\n                padding: 0,\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }),\n            indicatorsContainer: (provided) => ({\n                ...provided,\n                width: 29,\n                position: 'relative',\n                right: 0,\n                borderLeft: '1px solid #CCD3E3',\n                backgroundColor: '#f5f6f9',\n                borderRadius: '0 4px 4px 0'\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                display: 'none !important'\n            }),\n            input: (provided) => ({\n                ...provided,\n                display: 'flex',\n                alignItems: 'center',\n                height: '100%',\n                padding: 0,\n                margin: 0\n            })\n        };\n\n        return (\n            <React.Fragment>\n                <div className=\"authForm_head\">\n                    <div className=\"authForm_title\">Personal settings</div>\n                    <p className={\"currentStep\"}>Step 4 of 4</p>\n                </div>\n                <div className=\"authForm_body authForm_steps authForm_steps-4\">\n                    <label className={(this.state.isAvailable) ? \"label-activs active\" : \"label-activs\"} onClick={this.handleAvailable}>\n                        <div className=\"activs\">\n                            <div className=\"activs-option\"></div>\n                        </div>\n                        <div className=\"col\">\n                            <span>Set available</span>\n                            <p>Let us know when you’re typically available to work</p>\n                        </div>\n                    </label>\n                    {\n                        this.state.isAvailable\n                            ? (\n                                <div className=\"schedule\">\n                                    <div className=\"schedule_head\">\n                                        <div>Available days</div>\n                                        <div>From</div>\n                                        <div>To</div>\n                                    </div>\n                                    <div className=\"schedule_body\">\n\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.monday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"monday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.monday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Monday</div>\n                                            <Select\n                                                options={options}\n                                                data-day={\"monday\"}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        monday: { ...this.state.schedule.monday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.monday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        monday: { ...this.state.schedule.monday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.monday.to}\n                                                styles={customStyles}/>\n                                        </div>\n\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.tuesday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"tuesday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.tuesday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Tuesday</div>\n                                            <Select\n                                                options={options}\n                                                data-day={\"tuesday\"}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        tuesday: { ...this.state.schedule.tuesday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.tuesday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        tuesday: { ...this.state.schedule.tuesday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.tuesday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.wednesday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"wednesday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.wednesday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Wednesday</div>\n                                            <Select\n                                                options={options}\n                                                data-day={\"wednesday\"}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        wednesday: { ...this.state.schedule.wednesday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.wednesday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        wednesday: { ...this.state.schedule.wednesday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.wednesday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.thursday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"thursday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.thursday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Thursday</div>\n                                            <Select\n                                                options={options}\n                                                data-day={\"thursday\"}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        thursday: { ...this.state.schedule.thursday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.thursday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        thursday: { ...this.state.schedule.thursday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.thursday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.friday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"friday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.friday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Friday</div>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        friday: { ...this.state.schedule.friday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.friday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        friday: { ...this.state.schedule.friday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.friday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.saturday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"saturday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.saturday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Saturday</div>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        saturday: { ...this.state.schedule.saturday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.saturday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        saturday: { ...this.state.schedule.saturday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.saturday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                        <div className=\"schedule_day\">\n                                            <div\n                                                className={this.state.schedule.sunday.isAvailable ? \"daily active\" : \"daily\"}>\n                                                <div className={\"checkbox\"}\n                                                     id={\"sunday\"}\n                                                     onClick={this.setDayAvailable}\n                                                     style={{\n                                                         background: `url(${(this.state.schedule.sunday.isAvailable) ? icons.CHECKBOX_ON : icons.CHECKBOX})`\n                                                     }}\n                                                ></div>\n                                                Sunday</div>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        sunday: { ...this.state.schedule.sunday,\n                                                            from: selected } } })\n                                                }}\n                                                value={this.state.schedule.sunday.from}\n                                                styles={customStyles}/>\n                                            <Select\n                                                options={options}\n                                                onChange={(selected) => { this.setState({ schedule: { ...this.state.schedule,\n                                                        sunday: { ...this.state.schedule.sunday, to: { value: selected.value,\n                                                                label: `${selected.value}:00` } } } })\n                                                }}\n                                                value={this.state.schedule.sunday.to}\n                                                styles={customStyles}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                            : null\n                    }\n                    <button\n                        className={\"btn btn-blue btn-continue\"}\n                        onClick={this.handleNextStep}\n                    >\n                        Continue\n                    </button>\n                    <div className=\"stepActions\">\n                        <a className=\"stepActions_prev\"\n                           onClick={this.prevStep}\n                        >Back to previous step</a>\n                        <a className=\"stepActions_skip\"></a>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    user: state.authReducer.user,\n    userID: state.authReducer.userID,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    },\n    setUserStatus: data => {\n        dispatch(setUserStatus(data))\n    },\n    requestUserData: data => {\n        dispatch(requestUserData(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(Step3)"]},"metadata":{},"sourceType":"module"}