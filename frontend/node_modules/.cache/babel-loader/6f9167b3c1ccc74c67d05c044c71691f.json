{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/EmailVerification.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { login, setUserStatus } from \"../../../store/actions\";\nimport * as icons from '../../../assets';\nimport '../index.scss';\n\nclass EmailVerification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setEmailResend = e => {\n      e.preventDefault();\n      this.setState({\n        isResendEmail: !this.state.isResendEmail\n      });\n    };\n\n    this.resendToEmail = e => {\n      e.preventDefault();\n      axios.post('/api/users/resendToEmail', {\n        id: this.props.userID,\n        email: this.props.user.email\n      }).then(result => {\n        this.setState({\n          isResendEmail: !this.state.isResendEmail\n        });\n      });\n    };\n\n    this.state = {\n      userStatus: this.props.userStatus,\n      isResendEmail: false\n    };\n  }\n\n  render() {\n    if (this.state.isResendEmail) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Didn\\u2019t get an email?\")), React.createElement(\"div\", {\n        className: \"authFooter authFooter-confirmation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontWeight: '600'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"If you don\\u2019t see an email from us within a few minutes, a few things could have happened:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"- The email is in your spam folder;\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"- The email address you entered had a mistake or typo;\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"- You accidentally gave us another email address;\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"- We can\\u2019t deliver the email to this address.\")), React.createElement(\"button\", {\n        className: \"btn btn-blue\",\n        onClick: this.resendToEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Re-enter email\")));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Check your email\")), React.createElement(\"div\", {\n        className: \"authWarning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icons.SUCCESS,\n        alt: \"\",\n        className: \"authWarning_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authWarning_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Check your email!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"We\\u2019ve sent an email to \", this.props.user.email, \" with link\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"to activate your account.\"))), React.createElement(\"div\", {\n        className: \"authFooter authFooter-confirmation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"If the email doesn\\u2019t show up soon, check your spam folder. We sent it from\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"our.address@gmail.com\")), React.createElement(\"button\", {\n        className: \"btn btn-blue\",\n        onClick: this.setEmailResend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Didn\\u2019t get an email\")));\n    }\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  user: state.authReducer.user,\n  userStatus: state.authReducer.userStatus,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  },\n  setUserStatus: data => {\n    dispatch(setUserStatus(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(EmailVerification);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/EmailVerification.js"],"names":["React","connect","Link","axios","login","setUserStatus","icons","EmailVerification","Component","constructor","props","setEmailResend","e","preventDefault","setState","isResendEmail","state","resendToEmail","post","id","userID","email","user","then","result","userStatus","render","fontWeight","SUCCESS","mapState","currentUser","authReducer","isLoggedIn","errors","mapDispatch","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {login, setUserStatus} from \"../../../store/actions\";\nimport * as icons from '../../../assets';\nimport '../index.scss';\n\nclass EmailVerification extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userStatus: this.props.userStatus,\n            isResendEmail: false\n        };\n    }\n\n    setEmailResend = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            isResendEmail: !this.state.isResendEmail\n        });\n    };\n\n    resendToEmail = (e) => {\n        e.preventDefault();\n\n        axios.post('/api/users/resendToEmail', { id: this.props.userID, email: this.props.user.email }).then(result => {\n            this.setState({\n                isResendEmail: !this.state.isResendEmail\n            });\n        });\n    };\n\n    render() {\n        if (this.state.isResendEmail) {\n            return (\n                <React.Fragment>\n                    <div className=\"authForm_head\">\n                        <div className=\"authForm_title\">Didn’t get an email?</div>\n                    </div>\n                    <div className=\"authFooter authFooter-confirmation\">\n                        <p style={{ fontWeight: '600' }}>If you don’t see an email from us within a few minutes, a few things could\n                            have happened:</p>\n                        <ul>\n                            <li>- The email is in your spam folder;</li>\n                            <li>- The email address you entered had a mistake or typo;</li>\n                            <li>- You accidentally gave us another email address;</li>\n                            <li>- We can’t deliver the email to this address.</li>\n                        </ul>\n                        <button className={\"btn btn-blue\"} onClick={this.resendToEmail}>Re-enter email</button>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"authForm_head\">\n                        <div className=\"authForm_title\">Check your email</div>\n                    </div>\n                    <div className=\"authWarning\">\n                        <img src={icons.SUCCESS} alt=\"\" className=\"authWarning_icon\"/>\n                        <div className=\"col\">\n                            <div className=\"authWarning_title\">Check your email!</div>\n                            <p>We’ve sent an email to {this.props.user.email} with link\n                                <br/>to activate your account.</p>\n                        </div>\n                    </div>\n                    <div className=\"authFooter authFooter-confirmation\">\n                        <p>If the email doesn’t show up soon, check your spam folder. We sent it from<br/>\n                            <a>our.address@gmail.com</a></p>\n                        <button className={\"btn btn-blue\"} onClick={this.setEmailResend}>Didn’t get an email</button>\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    user: state.authReducer.user,\n    userStatus: state.authReducer.userStatus,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    },\n    setUserStatus: data => {\n        dispatch(setUserStatus(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(EmailVerification)"]},"metadata":{},"sourceType":"module"}