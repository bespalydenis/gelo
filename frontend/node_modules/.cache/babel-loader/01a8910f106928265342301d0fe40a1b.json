{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Login.js\";\nimport React from 'react'; // import { connect } from \"react-redux\";\n\nimport classnames from \"classnames\";\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt from 'jsonwebtoken';\nimport { requestUsers, login } from \"../../store/actions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log('>> i', userData);\n      this.props.login(userData); // axios.post('/api/users/login', {email: userData.email, password: userData.password})\n      //     .then(res => {\n      //         localStorage.setItem('jwtToken', res.data.token);\n      //         setAuthToken(res.data.token);\n      //         console.log('>> Token', jwt.decode(res.data.token));\n      //         alert('Login Success!');\n      //         window.location.href = './'\n      //     })\n      //     .catch(err => {\n      //         console.log('>>',err)\n      //     })\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    if (this.props.isLoggedIn) window.location.href = './';\n    return React.createElement(\"section\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Login Page\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Email\", React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, errors.email, \" \", errors.emailnotfound)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Password\", React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, errors.email, \" \", errors.emailnotfound)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"LOGIN\"))));\n  }\n\n} // const mapState = null\n// const mapDispatch = null\n\n\nconst mapState = state => ({\n  currentUser: state.currentUser,\n  isLoggedIn: state.doc.isLoggedIn\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Login);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Login.js"],"names":["React","classnames","axios","connect","setAuthToken","jwt","requestUsers","login","Login","Component","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","console","log","props","errors","render","isLoggedIn","window","location","href","invalid","emailnotfound","passwordincorrect","mapState","currentUser","doc","mapDispatch","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,YAAR,EAAsBC,KAAtB,QAAkC,qBAAlC;;AAEA,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAUdC,QAVc,GAUHC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd;AACH,KAZa;;AAAA,SAcdC,QAdc,GAcHL,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACM,cAAF;AAEE,YAAMC,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADL;AAEbE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFR,OAAjB;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,QAApB;AAEA,WAAKM,KAAL,CAAWlB,KAAX,CAAiBY,QAAjB,EAVY,CAYZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KArCa;;AAGV,SAAKE,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTI,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AA+BDC,EAAAA,MAAM,GAAG;AAAA,UACGD,MADH,GACc,KAAKL,KADnB,CACGK,MADH;AAGL,QAAG,KAAKD,KAAL,CAAWG,UAAd,EACIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AAEJ,WACI;AAAS,MAAA,SAAS,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKd,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AACI,MAAA,QAAQ,EAAE,KAAKN,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWD,KAFtB;AAGI,MAAA,KAAK,EAAEM,MAAM,CAACN,KAHlB;AAII,MAAA,EAAE,EAAE,OAJR;AAKI,MAAA,IAAI,EAAE,OALV;AAMI,MAAA,SAAS,EAAEnB,UAAU,CAAC,EAAD,EAAK;AACtB+B,QAAAA,OAAO,EAAEN,MAAM,CAACN,KAAP,IAAgBM,MAAM,CAACO;AADV,OAAL,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,MAAM,CAACN,KAAX,OAAmBM,MAAM,CAACO,aAA1B,CAZJ,CADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI;AACI,MAAA,QAAQ,EAAE,KAAKtB,QADnB;AAEI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,QAFtB;AAGI,MAAA,KAAK,EAAEI,MAAM,CAACJ,QAHlB;AAII,MAAA,EAAE,EAAE,UAJR;AAKI,MAAA,IAAI,EAAE,UALV;AAMI,MAAA,SAAS,EAAErB,UAAU,CAAC,EAAD,EAAK;AACtB+B,QAAAA,OAAO,EAAEN,MAAM,CAACJ,QAAP,IAAmBI,MAAM,CAACQ;AADb,OAAL,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIR,MAAM,CAACN,KAAX,OAAmBM,MAAM,CAACO,aAA1B,CAZJ,CAfJ,EA6BI;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,SAAS,EAAE,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BJ,CAFJ,CADJ,CADJ;AA2CH;;AAzF+B,C,CA4FpC;AACA;;;AAEA,MAAME,QAAQ,GAAId,KAAD,KAAY;AACzBe,EAAAA,WAAW,EAAEf,KAAK,CAACe,WADM;AAEzBR,EAAAA,UAAU,EAAEP,KAAK,CAACgB,GAAN,CAAUT;AAFG,CAAZ,CAAjB;;AAKA,MAAMU,WAAW,GAAIC,QAAD,KAAe;AAC/BhC,EAAAA,KAAK,EAAEiC,IAAI,IAAI;AACXD,IAAAA,QAAQ,CAAChC,KAAK,CAACiC,IAAD,CAAN,CAAR;AACH;AAH8B,CAAf,CAApB;;AAOA,eAAerC,OAAO,CAACgC,QAAD,EAAWG,WAAX,CAAP,CAA+B9B,KAA/B,CAAf","sourcesContent":["import React from 'react'\n// import { connect } from \"react-redux\";\nimport classnames from \"classnames\"\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt from 'jsonwebtoken';\nimport {requestUsers, login} from \"../../store/actions\";\n\nclass Login extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n      e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        console.log('>> i', userData);\n\n        this.props.login(userData);\n\n        // axios.post('/api/users/login', {email: userData.email, password: userData.password})\n        //     .then(res => {\n        //         localStorage.setItem('jwtToken', res.data.token);\n        //         setAuthToken(res.data.token);\n        //         console.log('>> Token', jwt.decode(res.data.token));\n        //         alert('Login Success!');\n        //         window.location.href = './'\n        //     })\n        //     .catch(err => {\n        //         console.log('>>',err)\n        //     })\n    };\n\n    render() {\n        const { errors } = this.state;\n\n        if(this.props.isLoggedIn)\n            window.location.href = './';\n\n        return (\n            <section className={\"form\"}>\n                <div className=\"wr\">\n                    <h1>Login Page</h1>\n                    <form noValidate onSubmit={this.onSubmit}>\n                        <label>\n                            Email\n                            <input\n                                onChange={this.onChange}\n                                value={this.state.email}\n                                error={errors.email}\n                                id={\"email\"}\n                                type={\"email\"}\n                                className={classnames(\"\", {\n                                    invalid: errors.email || errors.emailnotfound\n                                })}\n                            />\n                            <p>{errors.email} {errors.emailnotfound}</p>\n                        </label>\n                        <label>\n                            Password\n                            <input\n                                onChange={this.onChange}\n                                value={this.state.password}\n                                error={errors.password}\n                                id={\"password\"}\n                                type={\"password\"}\n                                className={classnames(\"\", {\n                                    invalid: errors.password || errors.passwordincorrect\n                                })}\n                            />\n                            <p>{errors.email} {errors.emailnotfound}</p>\n                        </label>\n                        <button\n                            type={\"submit\"}\n                            className={\"btn\"}\n                        >\n                            LOGIN\n                        </button>\n                    </form>\n                </div>\n            </section>\n        )\n    }\n}\n\n// const mapState = null\n// const mapDispatch = null\n\nconst mapState = (state) => ({\n    currentUser: state.currentUser,\n    isLoggedIn: state.doc.isLoggedIn\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(Login)\n"]},"metadata":{},"sourceType":"module"}