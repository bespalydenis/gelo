{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ResetPass.js\";\nimport React from 'react'; // import { connect } from \"react-redux\";\n\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport { requestUsers, login } from \"../../store/actions\";\nimport axios from 'axios';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport * as icons from \"../../assets\";\nimport jwt_decode from 'jwt-decode';\n\nclass ResetPass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      function validateEmail(email) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n\n      if (!this.props.match.params.secret) {\n        if (validateEmail(this.state.email)) {\n          this.setState({\n            isValidEmail: true,\n            errors: false\n          });\n        } else {\n          this.setState({\n            isValidEmail: false,\n            errors: false\n          });\n        }\n      } else {\n        if (e.target.value.length < 6) {\n          this.setState({\n            isValidPassword: _objectSpread({}, this.state.isValidPassword, {\n              [e.target.id]: false\n            })\n          });\n        } else if (e.target.value.length >= 6) {\n          this.setState({\n            isValidPassword: _objectSpread({}, this.state.isValidPassword, {\n              [e.target.id]: true\n            })\n          });\n        }\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      console.log('>> #1');\n\n      if (this.props.match.params.secret) {\n        const token = jwt_decode(this.props.match.params.secret);\n        console.log('>> #2', token);\n        axios.post('/api/users/setPassword', {\n          email: token.email,\n          password: this.state.password\n        }).then(result => {\n          if (result.status === 200) {\n            this.setState({\n              viewAfterReset: true\n            });\n          }\n        }).catch(error => console.log('>> error', error));\n      } else {\n        console.log('>> #3');\n        axios.post('/api/users/reset', {\n          email: this.state.email\n        }).then(result => {\n          console.log('>> #4');\n          console.log('>> resetSecret', result);\n\n          if (result.data === 'Success') {\n            this.setState({\n              viewAfterSend: true\n            });\n          } else {\n            this.setState({\n              errors: {\n                email: 'error'\n              }\n            });\n          }\n        }).catch(error => {\n          console.log('>>> e', error);\n        });\n      }\n    };\n\n    this.showPassword = e => {\n      const index = e.target.closest('label').querySelector('input').getAttribute('index');\n\n      if (index == 1) {\n        this.setState({\n          isPasswordShow1: !this.state.isPasswordShow1\n        });\n      } else if (index == 2) {\n        this.setState({\n          isPasswordShow2: !this.state.isPasswordShow2\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      console.log('>>>> e', e.target);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      password2: '',\n      errors: {},\n      isValidEmail: false,\n      resetSecret: null,\n      isPasswordShow1: false,\n      isPasswordShow2: false,\n      isValidPassword: {\n        password: false,\n        password2: false\n      },\n      isUserExist: ['A user with this email does not exist. Try again', 'Enter your email to receive password reset link'],\n      viewAfterSend: false,\n      viewAfterReset: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.secret) {\n      console.log('>> secret decode', jwt_decode(this.props.match.params.secret));\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    if (this.props.isLoggedIn) window.location.href = './';\n\n    if (this.state.viewAfterSend) {\n      return React.createElement(\"section\", {\n        className: \"auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cols\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col col2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Email sent\")), React.createElement(\"div\", {\n        className: \"authWarning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icons.SUCCESS,\n        alt: \"\",\n        className: \"authWarning_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authWarning_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Success!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"We\\u2019ve sent an email to \", this.state.email, \" with password\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), \"reset instructions.\"))), React.createElement(\"p\", {\n        className: \"authAfterWarning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"If the email doesn\\u2019t show up soon, check your spam folder. We sent it from \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), \"our.address@gmail.com\"), React.createElement(Link, {\n        to: '/login',\n        className: \"btn btn-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Return to login\"))))));\n    } else if (this.state.viewAfterReset) {\n      return React.createElement(\"section\", {\n        className: \"auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cols\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col col2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Reset password\")), React.createElement(\"div\", {\n        className: \"authWarning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icons.SUCCESS,\n        alt: \"\",\n        className: \"authWarning_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authWarning_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Success!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Your password has been updated.\"))), React.createElement(Link, {\n        to: '/login',\n        className: \"btn btn-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Back to login\"))))));\n    } else {\n      return React.createElement(\"section\", {\n        className: \"auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cols\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col col2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"authForm_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Reset password\"), !this.props.match.params.secret && !this.props.match.params.email && React.createElement(\"div\", {\n        className: \"authForm_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Back to Login\"))), React.createElement(\"form\", {\n        className: \"authForm_body\",\n        autocomplete: \"off\",\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, !this.props.match.params.secret ? React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        onChange: this.onChange,\n        onKeyUp: this.onChange,\n        value: this.state.email,\n        error: errors && errors.email,\n        placeholder: \"Your email\",\n        id: \"email\",\n        type: \"email\",\n        className: classnames(\"\", {\n          invalid: errors && errors.email\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), errors && errors.email ? React.createElement(\"p\", {\n        className: \"labelError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"A user with this email does not exist. Try again\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Enter your email to receive password reset link\")) : null, this.props.match.params.secret && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"New password\"), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.password,\n        error: errors && errors.password,\n        \"data-index\": '1',\n        id: \"password\",\n        placeholder: \"Your new password\",\n        type: this.state.isPasswordShow1 ? \"text\" : \"password\",\n        className: classnames(\"\", {\n          invalid: errors && errors.password\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), errors && errors.password ? React.createElement(\"p\", {\n        className: \"labelError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Oops. That password isn't right. \", React.createElement(\"a\", {\n        href: \"\",\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Recover your password?\")) : null, React.createElement(\"a\", {\n        href: \"javascript:void(0);\",\n        className: \"showPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icons.EYE,\n        alt: \"\",\n        className: \"labelIcon\",\n        onClick: this.showPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Confirm new password\"), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.password2,\n        error: errors && errors.password2,\n        \"data-index\": '2',\n        id: \"password2\",\n        placeholder: \"Confirm your new password\",\n        type: this.state.isPasswordShow2 ? \"text\" : \"password\",\n        className: classnames(\"\", {\n          invalid: errors && errors.password\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), errors && errors.password ? React.createElement(\"p\", {\n        className: \"labelError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Oops. That password isn't right. \", React.createElement(\"a\", {\n        href: \"\",\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Recover your password?\")) : null, React.createElement(\"a\", {\n        href: \"javascript:void(0);\",\n        className: \"showPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: icons.EYE,\n        alt: \"\",\n        className: \"labelIcon\",\n        onClick: this.showPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: this.props.match.params.secret ? this.state.isValidPassword.password && this.state.isValidPassword.password2 ? \"btn btn-blue btn-continue\" : \"btn btn-continue btn-blue btn-disabled\" : this.state.isValidEmail ? \"btn btn-blue btn-continue\" : \"btn btn-continue btn-blue btn-disabled\",\n        disabled: this.props.match.params.secret ? false : !this.state.isValidEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Reset password\")))))));\n    }\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  userInfo: state.authReducer.user,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(ResetPass);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ResetPass.js"],"names":["React","classnames","connect","requestUsers","login","axios","Link","icons","jwt_decode","ResetPass","Component","constructor","props","onChange","e","setState","target","id","value","validateEmail","email","re","test","match","params","secret","state","isValidEmail","errors","length","isValidPassword","onSubmit","preventDefault","console","log","token","post","password","then","result","status","viewAfterReset","catch","error","data","viewAfterSend","showPassword","index","closest","querySelector","getAttribute","isPasswordShow1","isPasswordShow2","handleSubmit","password2","resetSecret","isUserExist","componentDidMount","render","isLoggedIn","window","location","href","SUCCESS","invalid","EYE","mapState","currentUser","authReducer","userInfo","user","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\n// import { connect } from \"react-redux\";\nimport classnames from \"classnames\"\nimport { connect } from 'react-redux';\nimport {requestUsers, login} from \"../../store/actions\";\nimport axios from 'axios';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport * as icons from \"../../assets\";\nimport jwt_decode from 'jwt-decode';\n\nclass ResetPass extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            password2: '',\n            errors: {},\n            isValidEmail: false,\n            resetSecret: null,\n            isPasswordShow1: false,\n            isPasswordShow2: false,\n            isValidPassword: {\n                password: false,\n                password2: false\n            },\n            isUserExist: ['A user with this email does not exist. Try again', 'Enter your email to receive password reset link'],\n            viewAfterSend: false,\n            viewAfterReset: false\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.match.params.secret) {\n            console.log('>> secret decode', jwt_decode(this.props.match.params.secret));\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n\n        function validateEmail(email) {\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(email);\n        }\n\n        if(!this.props.match.params.secret) {\n            if(validateEmail(this.state.email)) {\n                this.setState({\n                    isValidEmail: true,\n                    errors: false\n                });\n            } else {\n                this.setState({\n                    isValidEmail: false,\n                    errors: false\n                });\n            }\n        } else {\n            if(e.target.value.length < 6) {\n                this.setState({\n                    isValidPassword: {\n                        ...this.state.isValidPassword,\n                        [e.target.id]: false\n                    }\n                });\n            } else if(e.target.value.length >= 6) {\n                this.setState({\n                    isValidPassword: {\n                        ...this.state.isValidPassword,\n                        [e.target.id]: true\n                    }\n                });\n            }\n        }\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        console.log('>> #1');\n        if(this.props.match.params.secret) {\n            const token = jwt_decode(this.props.match.params.secret);\n            console.log('>> #2', token);\n\n            axios.post('/api/users/setPassword', { email: token.email, password: this.state.password }).then(result => {\n                if(result.status === 200) {\n                    this.setState({\n                        viewAfterReset: true\n                    });\n                }\n            }).catch(error => console.log('>> error', error));\n        } else {\n            console.log('>> #3');\n            axios.post('/api/users/reset', { email: this.state.email }).then(result => {\n                console.log('>> #4');\n                console.log('>> resetSecret', result);\n                if(result.data === 'Success') {\n                    this.setState({\n                        viewAfterSend: true\n                    });\n                } else {\n                    this.setState({\n                        errors: {\n                            email: 'error'\n                        }\n                    });\n                }\n            }).catch(error => {\n                console.log('>>> e', error);\n            });\n        }\n    };\n\n    showPassword = (e) => {\n        const index = e.target.closest('label').querySelector('input').getAttribute('index');\n        if(index == 1) {\n            this.setState({ isPasswordShow1: !this.state.isPasswordShow1 });\n        } else if(index == 2) {\n            this.setState({ isPasswordShow2: !this.state.isPasswordShow2 });\n        }\n    };\n\n    handleSubmit = (e) => {\n        console.log('>>>> e', e.target)\n    };\n\n    render() {\n        const errors = this.state.errors;\n\n        if(this.props.isLoggedIn)\n            window.location.href = './';\n\n\n\n        if(this.state.viewAfterSend) {\n            return (\n                <section className={\"auth\"}>\n                    <div className=\"wr\">\n                        <div className=\"cols\">\n                            <div className=\"col col1\">\n\n                            </div>\n                            <div className=\"col col2\">\n                                <div className=\"authForm\">\n                                    <div className=\"authForm_head\">\n                                        <div className=\"authForm_title\">Email sent</div>\n                                    </div>\n                                    <div className=\"authWarning\">\n                                        <img src={icons.SUCCESS} alt=\"\" className=\"authWarning_icon\"/>\n                                        <div className=\"col\">\n                                            <div className=\"authWarning_title\">Success!</div>\n                                            <p>We’ve sent an email to {this.state.email} with password<br/>\n                                                reset instructions.</p>\n                                        </div>\n                                    </div>\n                                    <p className={\"authAfterWarning\"}>If the email doesn’t show up soon, check your spam folder. We sent it from <br/>\n                                        our.address@gmail.com</p>\n                                    <Link to={'/login'} className={\"btn btn-blue\"}>Return to login</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n        } else if (this.state.viewAfterReset) {\n            return (\n                <section className={\"auth\"}>\n                    <div className=\"wr\">\n                        <div className=\"cols\">\n                            <div className=\"col col1\">\n\n                            </div>\n                            <div className=\"col col2\">\n                                <div className=\"authForm\">\n                                    <div className=\"authForm_head\">\n                                        <div className=\"authForm_title\">Reset password</div>\n                                    </div>\n                                    <div className=\"authWarning\">\n                                        <img src={icons.SUCCESS} alt=\"\" className=\"authWarning_icon\"/>\n                                        <div className=\"col\">\n                                            <div className=\"authWarning_title\">Success!</div>\n                                            <p>Your password has been updated.</p>\n                                        </div>\n                                    </div>\n                                    <Link to={'/login'} className={\"btn btn-blue\"}>Back to login</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            );\n        } else {\n            return (\n                <section className={\"auth\"}>\n                    <div className=\"wr\">\n                        <div className=\"cols\">\n                            <div className=\"col col1\">\n\n                            </div>\n                            <div className=\"col col2\">\n                                <div className=\"authForm\">\n                                    <div className=\"authForm_head\">\n                                        <div className=\"authForm_title\">Reset password</div>\n                                        {\n                                            !this.props.match.params.secret && !this.props.match.params.email &&\n                                            <div className=\"authForm_info\">\n                                                <a href=\"/login\">Back to Login</a>\n                                            </div>\n                                        }\n                                    </div>\n                                    <form className={\"authForm_body\"} autocomplete=\"off\" noValidate onSubmit={this.onSubmit}>\n                                        {\n                                            (!this.props.match.params.secret) ?\n                                                <label>\n                                                    <span>Email</span>\n                                                    <input\n                                                        onChange={this.onChange}\n                                                        onKeyUp={this.onChange}\n                                                        value={this.state.email}\n                                                        error={errors && errors.email}\n                                                        placeholder={\"Your email\"}\n                                                        id={\"email\"}\n                                                        type={\"email\"}\n                                                        className={classnames(\"\", {\n                                                            invalid: errors && errors.email\n                                                        })}\n                                                    />\n                                                    {\n                                                        errors && errors.email ? <p className={\"labelError\"}>A user with this email does not exist. Try again\n                                                        </p> : <p>Enter your email to receive password reset link</p>\n                                                    }\n                                                </label> : null\n                                        }\n                                        {\n                                            this.props.match.params.secret && (\n                                                <React.Fragment>\n\n                                                    <label>\n                                                        <span>New password</span>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.password}\n                                                            error={errors && errors.password}\n                                                            data-index={'1'}\n                                                            id={\"password\"}\n                                                            placeholder={\"Your new password\"}\n                                                            type={(this.state.isPasswordShow1) ? \"text\" : \"password\"}\n                                                            className={classnames(\"\", {\n                                                                invalid: errors && errors.password\n                                                            })}\n                                                        />\n                                                        {\n                                                            errors && errors.password ? <p className={\"labelError\"}>Oops. That password isn't right. <a\n                                                                href=\"\" className={\"link\"}>Recover your password?</a></p> : null\n                                                        }\n                                                        <a href=\"javascript:void(0);\" className={\"showPassword\"}>\n                                                            <img src={icons.EYE} alt=\"\" className=\"labelIcon\" onClick={this.showPassword} />\n                                                        </a>\n                                                    </label>\n                                                    <label>\n                                                        <span>Confirm new password</span>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.password2}\n                                                            error={errors && errors.password2}\n                                                            data-index={'2'}\n                                                            id={\"password2\"}\n                                                            placeholder={\"Confirm your new password\"}\n                                                            type={(this.state.isPasswordShow2) ? \"text\" : \"password\"}\n                                                            className={classnames(\"\", {\n                                                                invalid: errors && errors.password\n                                                            })}\n                                                        />\n                                                        {\n                                                            errors && errors.password ? <p className={\"labelError\"}>Oops. That password isn't right. <a\n                                                                href=\"\" className={\"link\"}>Recover your password?</a></p> : null\n                                                        }\n                                                        <a href=\"javascript:void(0);\" className={\"showPassword\"}>\n                                                            <img src={icons.EYE} alt=\"\" className=\"labelIcon\" onClick={this.showPassword} />\n                                                        </a>\n                                                    </label>\n                                                </React.Fragment>\n                                            )\n                                        }\n                                        <button\n                                            type={\"submit\"}\n                                            className={\n                                                this.props.match.params.secret\n                                                    ? (this.state.isValidPassword.password && this.state.isValidPassword.password2) ? \"btn btn-blue btn-continue\" : \"btn btn-continue btn-blue btn-disabled\"\n                                                    : this.state.isValidEmail ? \"btn btn-blue btn-continue\" : \"btn btn-continue btn-blue btn-disabled\"}\n                                            disabled={this.props.match.params.secret ? false : !this.state.isValidEmail}\n                                        >\n                                            Reset password\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n        }\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    userInfo: state.authReducer.user,\n    errors: state.authReducer.errors,\n});\n\nconst mapDispatch = (dispatch) => ({\n    login: data => {\n        dispatch(login(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(ResetPass)\n"]},"metadata":{},"sourceType":"module"}