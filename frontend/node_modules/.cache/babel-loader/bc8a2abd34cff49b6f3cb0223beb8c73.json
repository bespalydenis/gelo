{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/Step/Step1.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setUserStatus, requestUserData } from \"../../../../store/actions\";\nimport * as icons from '../../../../assets';\nimport '../../index.scss';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport InputElement from 'react-input-mask';\n\nclass Step1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.setProfilePhoto = e => {\n      e.preventDefault();\n\n      const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = () => resolve(reader.result);\n\n        reader.onerror = error => reject(error);\n      });\n\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.saveResults = imageResult => {\n        this.setState({\n          profilePhoto: imageResult\n        });\n      };\n\n      async function covertToBase64() {\n        await toBase64(file).then(result => {\n          reader.saveResults(result);\n        });\n      }\n\n      ;\n      covertToBase64();\n    };\n\n    this.removeProfilePhoto = e => {\n      this.setState({\n        profilePhoto: null\n      });\n    };\n\n    this.setCountry = selected => {\n      this.setState({\n        country: selected.value\n      });\n    };\n\n    this.handleNextStep = e => {\n      e.preventDefault();\n\n      if (this.state.organizationTitle && !this.state.errors.organizationTitle) {\n        console.log(\">> S 1\");\n        axios.post('/api/users/completeStep1', {\n          id: this.props.userID,\n          meta: this.state\n        }).then(result => {\n          console.log('>> completeStep1', result);\n          console.log('>> STEP1!', this.props.userID);\n          this.props.setUserStatus({\n            id: this.props.userID,\n            status: 2\n          });\n        }).catch(error => {\n          console.log('>> error', error);\n        });\n      } else {\n        console.log(\">> S 2\");\n        this.setState({\n          errors: _objectSpread({}, this.state.errors, {\n            organizationTitle: true\n          })\n        });\n        window.scrollTo(0, 0);\n      }\n    };\n\n    this.skipSteps = e => {\n      e.preventDefault();\n      this.props.setUserStatus({\n        id: this.props.userID,\n        status: 5\n      });\n    };\n\n    this.closeWarning = e => {\n      this.setState({\n        isWarningShows: !this.state.isWarningShows\n      });\n    };\n\n    this.handleKeyUp = e => {\n      console.log('>> E TARGET', e.target.value);\n\n      if (e.target.value.length > 3 && this.state.errors.organizationTitle) {\n        this.setState({\n          errors: _objectSpread({}, this.state.errors, {\n            organizationTitle: false\n          })\n        });\n      }\n    };\n\n    this.handleChangePhone = e => {\n      console.log('>> Change Phone', e.target);\n    };\n\n    this.state = {\n      userStatus: this.props.userStatus,\n      profilePhoto: this.props.user.profilePhoto,\n      organizationTitle: this.props.user.organizationTitle,\n      country: this.props.user.country,\n      city: this.props.user.city,\n      zip: this.props.user.zip,\n      address: this.props.user.address,\n      phoneNumber1: this.props.user.phoneNumber1,\n      phoneNumber2: this.props.user.phoneNumber2,\n      website: this.props.user.website,\n      accountDesc: this.props.user.accountDesc,\n      isWarningShows: true,\n      errors: {\n        organizationTitle: false\n      },\n      countries: [{\n        label: 'Afghanistan',\n        value: 'AF'\n      }, {\n        label: 'Ã…land Islands',\n        value: 'AX'\n      }, {\n        label: 'Albania',\n        value: 'AL'\n      }, {\n        label: 'Algeria',\n        value: 'DZ'\n      }, {\n        label: 'American Samoa',\n        value: 'AS'\n      }, {\n        label: 'AndorrA',\n        value: 'AD'\n      }, {\n        label: 'Angola',\n        value: 'AO'\n      }, {\n        label: 'Anguilla',\n        value: 'AI'\n      }, {\n        label: 'Antarctica',\n        value: 'AQ'\n      }, {\n        label: 'Antigua and Barbuda',\n        value: 'AG'\n      }, {\n        label: 'Argentina',\n        value: 'AR'\n      }, {\n        label: 'Armenia',\n        value: 'AM'\n      }, {\n        label: 'Aruba',\n        value: 'AW'\n      }, {\n        label: 'Australia',\n        value: 'AU'\n      }, {\n        label: 'Austria',\n        value: 'AT'\n      }, {\n        label: 'Azerbaijan',\n        value: 'AZ'\n      }, {\n        label: 'Bahamas',\n        value: 'BS'\n      }, {\n        label: 'Bahrain',\n        value: 'BH'\n      }, {\n        label: 'Bangladesh',\n        value: 'BD'\n      }, {\n        label: 'Barbados',\n        value: 'BB'\n      }, {\n        label: 'Belarus',\n        value: 'BY'\n      }, {\n        label: 'Belgium',\n        value: 'BE'\n      }, {\n        label: 'Belize',\n        value: 'BZ'\n      }, {\n        label: 'Benin',\n        value: 'BJ'\n      }, {\n        label: 'Bermuda',\n        value: 'BM'\n      }, {\n        label: 'Bhutan',\n        value: 'BT'\n      }, {\n        label: 'Bolivia',\n        value: 'BO'\n      }, {\n        label: 'Bosnia and Herzegovina',\n        value: 'BA'\n      }, {\n        label: 'Botswana',\n        value: 'BW'\n      }, {\n        label: 'Bouvet Island',\n        value: 'BV'\n      }, {\n        label: 'Brazil',\n        value: 'BR'\n      }, {\n        label: 'British Indian Ocean Territory',\n        value: 'IO'\n      }, {\n        label: 'Brunei Darussalam',\n        value: 'BN'\n      }, {\n        label: 'Bulgaria',\n        value: 'BG'\n      }, {\n        label: 'Burkina Faso',\n        value: 'BF'\n      }, {\n        label: 'Burundi',\n        value: 'BI'\n      }, {\n        label: 'Cambodia',\n        value: 'KH'\n      }, {\n        label: 'Cameroon',\n        value: 'CM'\n      }, {\n        label: 'Canada',\n        value: 'CA'\n      }, {\n        label: 'Cape Verde',\n        value: 'CV'\n      }, {\n        label: 'Cayman Islands',\n        value: 'KY'\n      }, {\n        label: 'Central African Republic',\n        value: 'CF'\n      }, {\n        label: 'Chad',\n        value: 'TD'\n      }, {\n        label: 'Chile',\n        value: 'CL'\n      }, {\n        label: 'China',\n        value: 'CN'\n      }, {\n        label: 'Christmas Island',\n        value: 'CX'\n      }, {\n        label: 'Cocos (Keeling) Islands',\n        value: 'CC'\n      }, {\n        label: 'Colombia',\n        value: 'CO'\n      }, {\n        label: 'Comoros',\n        value: 'KM'\n      }, {\n        label: 'Congo',\n        value: 'CG'\n      }, {\n        label: 'Congo, The Democratic Republic of the',\n        value: 'CD'\n      }, {\n        label: 'Cook Islands',\n        value: 'CK'\n      }, {\n        label: 'Costa Rica',\n        value: 'CR'\n      }, {\n        label: 'Cote D\\'Ivoire',\n        value: 'CI'\n      }, {\n        label: 'Croatia',\n        value: 'HR'\n      }, {\n        label: 'Cuba',\n        value: 'CU'\n      }, {\n        label: 'Cyprus',\n        value: 'CY'\n      }, {\n        label: 'Czech Republic',\n        value: 'CZ'\n      }, {\n        label: 'Denmark',\n        value: 'DK'\n      }, {\n        label: 'Djibouti',\n        value: 'DJ'\n      }, {\n        label: 'Dominica',\n        value: 'DM'\n      }, {\n        label: 'Dominican Republic',\n        value: 'DO'\n      }, {\n        label: 'Ecuador',\n        value: 'EC'\n      }, {\n        label: 'Egypt',\n        value: 'EG'\n      }, {\n        label: 'El Salvador',\n        value: 'SV'\n      }, {\n        label: 'Equatorial Guinea',\n        value: 'GQ'\n      }, {\n        label: 'Eritrea',\n        value: 'ER'\n      }, {\n        label: 'Estonia',\n        value: 'EE'\n      }, {\n        label: 'Ethiopia',\n        value: 'ET'\n      }, {\n        label: 'Falkland Islands (Malvinas)',\n        value: 'FK'\n      }, {\n        label: 'Faroe Islands',\n        value: 'FO'\n      }, {\n        label: 'Fiji',\n        value: 'FJ'\n      }, {\n        label: 'Finland',\n        value: 'FI'\n      }, {\n        label: 'France',\n        value: 'FR'\n      }, {\n        label: 'French Guiana',\n        value: 'GF'\n      }, {\n        label: 'French Polynesia',\n        value: 'PF'\n      }, {\n        label: 'French Southern Territories',\n        value: 'TF'\n      }, {\n        label: 'Gabon',\n        value: 'GA'\n      }, {\n        label: 'Gambia',\n        value: 'GM'\n      }, {\n        label: 'Georgia',\n        value: 'GE'\n      }, {\n        label: 'Germany',\n        value: 'DE'\n      }, {\n        label: 'Ghana',\n        value: 'GH'\n      }, {\n        label: 'Gibraltar',\n        value: 'GI'\n      }, {\n        label: 'Greece',\n        value: 'GR'\n      }, {\n        label: 'Greenland',\n        value: 'GL'\n      }, {\n        label: 'Grenada',\n        value: 'GD'\n      }, {\n        label: 'Guadeloupe',\n        value: 'GP'\n      }, {\n        label: 'Guam',\n        value: 'GU'\n      }, {\n        label: 'Guatemala',\n        value: 'GT'\n      }, {\n        label: 'Guernsey',\n        value: 'GG'\n      }, {\n        label: 'Guinea',\n        value: 'GN'\n      }, {\n        label: 'Guinea-Bissau',\n        value: 'GW'\n      }, {\n        label: 'Guyana',\n        value: 'GY'\n      }, {\n        label: 'Haiti',\n        value: 'HT'\n      }, {\n        label: 'Heard Island and Mcdonald Islands',\n        value: 'HM'\n      }, {\n        label: 'Holy See (Vatican City State)',\n        value: 'VA'\n      }, {\n        label: 'Honduras',\n        value: 'HN'\n      }, {\n        label: 'Hong Kong',\n        value: 'HK'\n      }, {\n        label: 'Hungary',\n        value: 'HU'\n      }, {\n        label: 'Iceland',\n        value: 'IS'\n      }, {\n        label: 'India',\n        value: 'IN'\n      }, {\n        label: 'Indonesia',\n        value: 'ID'\n      }, {\n        label: 'Iran, Islamic Republic Of',\n        value: 'IR'\n      }, {\n        label: 'Iraq',\n        value: 'IQ'\n      }, {\n        label: 'Ireland',\n        value: 'IE'\n      }, {\n        label: 'Isle of Man',\n        value: 'IM'\n      }, {\n        label: 'Israel',\n        value: 'IL'\n      }, {\n        label: 'Italy',\n        value: 'IT'\n      }, {\n        label: 'Jamaica',\n        value: 'JM'\n      }, {\n        label: 'Japan',\n        value: 'JP'\n      }, {\n        label: 'Jersey',\n        value: 'JE'\n      }, {\n        label: 'Jordan',\n        value: 'JO'\n      }, {\n        label: 'Kazakhstan',\n        value: 'KZ'\n      }, {\n        label: 'Kenya',\n        value: 'KE'\n      }, {\n        label: 'Kiribati',\n        value: 'KI'\n      }, {\n        label: 'Korea, Democratic People\\'S Republic of',\n        value: 'KP'\n      }, {\n        label: 'Korea, Republic of',\n        value: 'KR'\n      }, {\n        label: 'Kuwait',\n        value: 'KW'\n      }, {\n        label: 'Kyrgyzstan',\n        value: 'KG'\n      }, {\n        label: 'Lao People\\'S Democratic Republic',\n        value: 'LA'\n      }, {\n        label: 'Latvia',\n        value: 'LV'\n      }, {\n        label: 'Lebanon',\n        value: 'LB'\n      }, {\n        label: 'Lesotho',\n        value: 'LS'\n      }, {\n        label: 'Liberia',\n        value: 'LR'\n      }, {\n        label: 'Libyan Arab Jamahiriya',\n        value: 'LY'\n      }, {\n        label: 'Liechtenstein',\n        value: 'LI'\n      }, {\n        label: 'Lithuania',\n        value: 'LT'\n      }, {\n        label: 'Luxembourg',\n        value: 'LU'\n      }, {\n        label: 'Macao',\n        value: 'MO'\n      }, {\n        label: 'Macedonia, The Former Yugoslav Republic of',\n        value: 'MK'\n      }, {\n        label: 'Madagascar',\n        value: 'MG'\n      }, {\n        label: 'Malawi',\n        value: 'MW'\n      }, {\n        label: 'Malaysia',\n        value: 'MY'\n      }, {\n        label: 'Maldives',\n        value: 'MV'\n      }, {\n        label: 'Mali',\n        value: 'ML'\n      }, {\n        label: 'Malta',\n        value: 'MT'\n      }, {\n        label: 'Marshall Islands',\n        value: 'MH'\n      }, {\n        label: 'Martinique',\n        value: 'MQ'\n      }, {\n        label: 'Mauritania',\n        value: 'MR'\n      }, {\n        label: 'Mauritius',\n        value: 'MU'\n      }, {\n        label: 'Mayotte',\n        value: 'YT'\n      }, {\n        label: 'Mexico',\n        value: 'MX'\n      }, {\n        label: 'Micronesia, Federated States of',\n        value: 'FM'\n      }, {\n        label: 'Moldova, Republic of',\n        value: 'MD'\n      }, {\n        label: 'Monaco',\n        value: 'MC'\n      }, {\n        label: 'Mongolia',\n        value: 'MN'\n      }, {\n        label: 'Montserrat',\n        value: 'MS'\n      }, {\n        label: 'Morocco',\n        value: 'MA'\n      }, {\n        label: 'Mozambique',\n        value: 'MZ'\n      }, {\n        label: 'Myanmar',\n        value: 'MM'\n      }, {\n        label: 'Namibia',\n        value: 'NA'\n      }, {\n        label: 'Nauru',\n        value: 'NR'\n      }, {\n        label: 'Nepal',\n        value: 'NP'\n      }, {\n        label: 'Netherlands',\n        value: 'NL'\n      }, {\n        label: 'Netherlands Antilles',\n        value: 'AN'\n      }, {\n        label: 'New Caledonia',\n        value: 'NC'\n      }, {\n        label: 'New Zealand',\n        value: 'NZ'\n      }, {\n        label: 'Nicaragua',\n        value: 'NI'\n      }, {\n        label: 'Niger',\n        value: 'NE'\n      }, {\n        label: 'Nigeria',\n        value: 'NG'\n      }, {\n        label: 'Niue',\n        value: 'NU'\n      }, {\n        label: 'Norfolk Island',\n        value: 'NF'\n      }, {\n        label: 'Northern Mariana Islands',\n        value: 'MP'\n      }, {\n        label: 'Norway',\n        value: 'NO'\n      }, {\n        label: 'Oman',\n        value: 'OM'\n      }, {\n        label: 'Pakistan',\n        value: 'PK'\n      }, {\n        label: 'Palau',\n        value: 'PW'\n      }, {\n        label: 'Palestinian Territory, Occupied',\n        value: 'PS'\n      }, {\n        label: 'Panama',\n        value: 'PA'\n      }, {\n        label: 'Papua New Guinea',\n        value: 'PG'\n      }, {\n        label: 'Paraguay',\n        value: 'PY'\n      }, {\n        label: 'Peru',\n        value: 'PE'\n      }, {\n        label: 'Philippines',\n        value: 'PH'\n      }, {\n        label: 'Pitcairn',\n        value: 'PN'\n      }, {\n        label: 'Poland',\n        value: 'PL'\n      }, {\n        label: 'Portugal',\n        value: 'PT'\n      }, {\n        label: 'Puerto Rico',\n        value: 'PR'\n      }, {\n        label: 'Qatar',\n        value: 'QA'\n      }, {\n        label: 'Reunion',\n        value: 'RE'\n      }, {\n        label: 'Romania',\n        value: 'RO'\n      }, {\n        label: 'Russian Federation',\n        value: 'RU'\n      }, {\n        label: 'RWANDA',\n        value: 'RW'\n      }, {\n        label: 'Saint Helena',\n        value: 'SH'\n      }, {\n        label: 'Saint Kitts and Nevis',\n        value: 'KN'\n      }, {\n        label: 'Saint Lucia',\n        value: 'LC'\n      }, {\n        label: 'Saint Pierre and Miquelon',\n        value: 'PM'\n      }, {\n        label: 'Saint Vincent and the Grenadines',\n        value: 'VC'\n      }, {\n        label: 'Samoa',\n        value: 'WS'\n      }, {\n        label: 'San Marino',\n        value: 'SM'\n      }, {\n        label: 'Sao Tome and Principe',\n        value: 'ST'\n      }, {\n        label: 'Saudi Arabia',\n        value: 'SA'\n      }, {\n        label: 'Senegal',\n        value: 'SN'\n      }, {\n        label: 'Serbia and Montenegro',\n        value: 'CS'\n      }, {\n        label: 'Seychelles',\n        value: 'SC'\n      }, {\n        label: 'Sierra Leone',\n        value: 'SL'\n      }, {\n        label: 'Singapore',\n        value: 'SG'\n      }, {\n        label: 'Slovakia',\n        value: 'SK'\n      }, {\n        label: 'Slovenia',\n        value: 'SI'\n      }, {\n        label: 'Solomon Islands',\n        value: 'SB'\n      }, {\n        label: 'Somalia',\n        value: 'SO'\n      }, {\n        label: 'South Africa',\n        value: 'ZA'\n      }, {\n        label: 'South Georgia and the South Sandwich Islands',\n        value: 'GS'\n      }, {\n        label: 'Spain',\n        value: 'ES'\n      }, {\n        label: 'Sri Lanka',\n        value: 'LK'\n      }, {\n        label: 'Sudan',\n        value: 'SD'\n      }, {\n        label: 'Surilabel',\n        value: 'SR'\n      }, {\n        label: 'Svalbard and Jan Mayen',\n        value: 'SJ'\n      }, {\n        label: 'Swaziland',\n        value: 'SZ'\n      }, {\n        label: 'Sweden',\n        value: 'SE'\n      }, {\n        label: 'Switzerland',\n        value: 'CH'\n      }, {\n        label: 'Syrian Arab Republic',\n        value: 'SY'\n      }, {\n        label: 'Taiwan, Province of China',\n        value: 'TW'\n      }, {\n        label: 'Tajikistan',\n        value: 'TJ'\n      }, {\n        label: 'Tanzania, United Republic of',\n        value: 'TZ'\n      }, {\n        label: 'Thailand',\n        value: 'TH'\n      }, {\n        label: 'Timor-Leste',\n        value: 'TL'\n      }, {\n        label: 'Togo',\n        value: 'TG'\n      }, {\n        label: 'Tokelau',\n        value: 'TK'\n      }, {\n        label: 'Tonga',\n        value: 'TO'\n      }, {\n        label: 'Trinidad and Tobago',\n        value: 'TT'\n      }, {\n        label: 'Tunisia',\n        value: 'TN'\n      }, {\n        label: 'Turkey',\n        value: 'TR'\n      }, {\n        label: 'Turkmenistan',\n        value: 'TM'\n      }, {\n        label: 'Turks and Caicos Islands',\n        value: 'TC'\n      }, {\n        label: 'Tuvalu',\n        value: 'TV'\n      }, {\n        label: 'Uganda',\n        value: 'UG'\n      }, {\n        label: 'Ukraine',\n        value: 'UA'\n      }, {\n        label: 'United Arab Emirates',\n        value: 'AE'\n      }, {\n        label: 'United Kingdom',\n        value: 'GB'\n      }, {\n        label: 'United States',\n        value: 'US'\n      }, {\n        label: 'United States Minor Outlying Islands',\n        value: 'UM'\n      }, {\n        label: 'Uruguay',\n        value: 'UY'\n      }, {\n        label: 'Uzbekistan',\n        value: 'UZ'\n      }, {\n        label: 'Vanuatu',\n        value: 'VU'\n      }, {\n        label: 'Venezuela',\n        value: 'VE'\n      }, {\n        label: 'Viet Nam',\n        value: 'VN'\n      }, {\n        label: 'Virgin Islands, British',\n        value: 'VG'\n      }, {\n        label: 'Virgin Islands, U.S.',\n        value: 'VI'\n      }, {\n        label: 'Wallis and Futuna',\n        value: 'WF'\n      }, {\n        label: 'Western Sahara',\n        value: 'EH'\n      }, {\n        label: 'Yemen',\n        value: 'YE'\n      }, {\n        label: 'Zambia',\n        value: 'ZM'\n      }, {\n        label: 'Zimbabwe',\n        value: 'ZW'\n      }]\n    };\n  }\n\n  render() {\n    const customStyles = {\n      option: (provided, {\n        data,\n        isDisabled,\n        isSelected,\n        isFocused\n      }) => _objectSpread({}, provided, {\n        height: 40,\n        backgroundColor: isDisabled ? null : isSelected ? '#F4F8FF' : null,\n        color: isSelected ? '#162B5B' : isFocused ? '#3260CC' : '#162B5B',\n        paddingLeft: 19,\n        paddingRight: 19\n      }),\n      valueContainer: provided => _objectSpread({}, provided, {\n        height: 50,\n        fontSize: 16,\n        paddingLeft: 19,\n        paddingRight: 19,\n        borderColor: '#CCD3E3'\n      }),\n      container: provided => _objectSpread({}, provided, {\n        fontSize: 16,\n        border: 'none !important',\n        borderColor: '#CCD3E3'\n      }),\n      control: provided => _objectSpread({}, provided, {\n        borderBottom: '1px solid #CCD3E3 !important',\n        borderLeft: '1px solid #CCD3E3 !important',\n        borderTop: '1px solid #CCD3E3 !important',\n        borderRight: '1px solid #CCD3E3 !important'\n      }),\n      dropdownIndicator: provided => _objectSpread({}, provided, {\n        padding: 0,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      indicatorsContainer: provided => _objectSpread({}, provided, {\n        width: 29,\n        position: 'relative',\n        right: 0,\n        borderLeft: '1px solid #CCD3E3',\n        backgroundColor: '#f5f6f9',\n        borderRadius: '0 4px 4px 0'\n      }),\n      indicatorSeparator: provided => _objectSpread({}, provided, {\n        display: 'none !important'\n      }),\n      input: provided => _objectSpread({}, provided, {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        padding: 0,\n        margin: 0\n      })\n    };\n    console.log(\">> DATA #1\", this.props.user);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Organization details\"), React.createElement(\"p\", {\n      className: \"currentStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Step 1 of 4\")), this.state.isWarningShows ? React.createElement(\"div\", {\n      className: \"authWarning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"close\",\n      onClick: this.closeWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons.CLOSE,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authWarning_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Welcome \", this.props.user.firstName, \" \", this.props.user.lastName, \"!  \\uD83D\\uDC4B \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"You confirmed the email address, and now we can complete your personal \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), \"and account settings. \"), React.createElement(\"a\", {\n      className: \"link\",\n      onClick: this.skipSteps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Skip all steps and do it later in the settings menu.\"))) : null, React.createElement(\"div\", {\n      className: \"authForm_body authForm_steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authStep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authStep_loadImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authStep_image\",\n      style: {\n        background: \"url(\".concat(this.state.profilePhoto, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }), !this.state.profilePhoto ? React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      className: \"btn btn-blue btn-empty btn-loadFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Upload image\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.setProfilePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      className: \"btn btn-blue btn-empty btn-loadFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Change image\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.setProfilePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      className: \"link link-delete\",\n      onClick: this.removeProfilePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Delete image\")))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Organization title \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      onChange: this.onChange,\n      placeholder: \"\",\n      type: \"text\",\n      id: \"organizationTitle\",\n      onChange: this.onChange,\n      onKeyUp: this.handleKeyUp,\n      value: this.state.organizationTitle,\n      className: this.state.errors.organizationTitle ? \"invalid\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Select, {\n      options: this.state.countries,\n      styles: customStyles,\n      onChange: this.setCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label50 label50-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      placeholder: \"Example: New York\",\n      type: \"text\",\n      id: \"city\",\n      value: this.state.city,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label50 label50-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"ZIP / Postal code\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      placeholder: \"Example: 10111\",\n      type: \"text\",\n      id: \"zip\",\n      value: this.state.zip,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      placeholder: \"Example: 45 Rockefeller Plaza\",\n      type: \"text\",\n      id: \"address\",\n      value: this.state.address,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label50 label50-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"Phone number 1\"), React.createElement(InputElement, {\n      onChange: this.onChange,\n      placeholder: \"Example: +1 212-332-6868\",\n      type: \"tel\",\n      mask: \"+9 999-999-9999\",\n      id: \"phoneNumber1\",\n      onKeyUp: this.handleKeyUp,\n      value: this.state.phoneNumber1,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label50 label50-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"Phone number 2\"), React.createElement(InputElement, {\n      onChange: this.onChange,\n      placeholder: \"Example: +1 212-332-6868\",\n      type: \"tel\",\n      mask: \"+9 999-999-9999\",\n      id: \"phoneNumber2\",\n      onKeyUp: this.handleKeyUp,\n      value: this.state.phoneNumber2,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, \"Website\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      placeholder: \"Example: www.yourwebsite.com\",\n      type: \"text\",\n      id: \"website\",\n      value: this.state.website,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"labelTextarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"accountDesc\",\n      value: this.state.accountDesc,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-blue\",\n      onClick: this.handleNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: \"stepActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"stepActions_prev\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"stepActions_skip\",\n      onClick: this.skipSteps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"Skip all steps\"))));\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  userID: state.authReducer.userID,\n  user: state.authReducer.user,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  setUserStatus: data => {\n    dispatch(setUserStatus(data));\n  },\n  requestUserData: data => {\n    dispatch(requestUserData(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Step1);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/ConfirmationTypes/Step/Step1.js"],"names":["React","connect","setUserStatus","requestUserData","icons","Select","axios","InputElement","Step1","Component","constructor","props","onChange","e","setState","target","id","value","setProfilePhoto","preventDefault","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","files","onloadend","imagePreviewUrl","saveResults","imageResult","profilePhoto","covertToBase64","then","removeProfilePhoto","setCountry","selected","country","handleNextStep","state","organizationTitle","errors","console","log","post","userID","meta","status","catch","window","scrollTo","skipSteps","closeWarning","isWarningShows","handleKeyUp","length","handleChangePhone","userStatus","user","city","zip","address","phoneNumber1","phoneNumber2","website","accountDesc","countries","label","render","customStyles","option","provided","data","isDisabled","isSelected","isFocused","height","backgroundColor","color","paddingLeft","paddingRight","valueContainer","fontSize","borderColor","container","border","control","borderBottom","borderLeft","borderTop","borderRight","dropdownIndicator","padding","width","display","justifyContent","alignItems","indicatorsContainer","position","right","borderRadius","indicatorSeparator","input","margin","CLOSE","firstName","lastName","background","mapState","currentUser","authReducer","isLoggedIn","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {setUserStatus,requestUserData} from \"../../../../store/actions\";\nimport * as icons from '../../../../assets';\nimport '../../index.scss';\nimport Select from 'react-select'\nimport axios from 'axios';\nimport InputElement from 'react-input-mask';\n\nclass Step1 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userStatus: this.props.userStatus,\n            profilePhoto: this.props.user.profilePhoto,\n            organizationTitle: this.props.user.organizationTitle,\n            country: this.props.user.country,\n            city: this.props.user.city,\n            zip: this.props.user.zip,\n            address: this.props.user.address,\n            phoneNumber1: this.props.user.phoneNumber1,\n            phoneNumber2: this.props.user.phoneNumber2,\n            website: this.props.user.website,\n            accountDesc: this.props.user.accountDesc,\n            isWarningShows: true,\n            errors: {\n                organizationTitle: false\n            },\n            countries: [\n                {label: 'Afghanistan', value: 'AF'},\n                {label: 'Ã…land Islands', value: 'AX'},\n                {label: 'Albania', value: 'AL'},\n                {label: 'Algeria', value: 'DZ'},\n                {label: 'American Samoa', value: 'AS'},\n                {label: 'AndorrA', value: 'AD'},\n                {label: 'Angola', value: 'AO'},\n                {label: 'Anguilla', value: 'AI'},\n                {label: 'Antarctica', value: 'AQ'},\n                {label: 'Antigua and Barbuda', value: 'AG'},\n                {label: 'Argentina', value: 'AR'},\n                {label: 'Armenia', value: 'AM'},\n                {label: 'Aruba', value: 'AW'},\n                {label: 'Australia', value: 'AU'},\n                {label: 'Austria', value: 'AT'},\n                {label: 'Azerbaijan', value: 'AZ'},\n                {label: 'Bahamas', value: 'BS'},\n                {label: 'Bahrain', value: 'BH'},\n                {label: 'Bangladesh', value: 'BD'},\n                {label: 'Barbados', value: 'BB'},\n                {label: 'Belarus', value: 'BY'},\n                {label: 'Belgium', value: 'BE'},\n                {label: 'Belize', value: 'BZ'},\n                {label: 'Benin', value: 'BJ'},\n                {label: 'Bermuda', value: 'BM'},\n                {label: 'Bhutan', value: 'BT'},\n                {label: 'Bolivia', value: 'BO'},\n                {label: 'Bosnia and Herzegovina', value: 'BA'},\n                {label: 'Botswana', value: 'BW'},\n                {label: 'Bouvet Island', value: 'BV'},\n                {label: 'Brazil', value: 'BR'},\n                {label: 'British Indian Ocean Territory', value: 'IO'},\n                {label: 'Brunei Darussalam', value: 'BN'},\n                {label: 'Bulgaria', value: 'BG'},\n                {label: 'Burkina Faso', value: 'BF'},\n                {label: 'Burundi', value: 'BI'},\n                {label: 'Cambodia', value: 'KH'},\n                {label: 'Cameroon', value: 'CM'},\n                {label: 'Canada', value: 'CA'},\n                {label: 'Cape Verde', value: 'CV'},\n                {label: 'Cayman Islands', value: 'KY'},\n                {label: 'Central African Republic', value: 'CF'},\n                {label: 'Chad', value: 'TD'},\n                {label: 'Chile', value: 'CL'},\n                {label: 'China', value: 'CN'},\n                {label: 'Christmas Island', value: 'CX'},\n                {label: 'Cocos (Keeling) Islands', value: 'CC'},\n                {label: 'Colombia', value: 'CO'},\n                {label: 'Comoros', value: 'KM'},\n                {label: 'Congo', value: 'CG'},\n                {label: 'Congo, The Democratic Republic of the', value: 'CD'},\n                {label: 'Cook Islands', value: 'CK'},\n                {label: 'Costa Rica', value: 'CR'},\n                {label: 'Cote D\\'Ivoire', value: 'CI'},\n                {label: 'Croatia', value: 'HR'},\n                {label: 'Cuba', value: 'CU'},\n                {label: 'Cyprus', value: 'CY'},\n                {label: 'Czech Republic', value: 'CZ'},\n                {label: 'Denmark', value: 'DK'},\n                {label: 'Djibouti', value: 'DJ'},\n                {label: 'Dominica', value: 'DM'},\n                {label: 'Dominican Republic', value: 'DO'},\n                {label: 'Ecuador', value: 'EC'},\n                {label: 'Egypt', value: 'EG'},\n                {label: 'El Salvador', value: 'SV'},\n                {label: 'Equatorial Guinea', value: 'GQ'},\n                {label: 'Eritrea', value: 'ER'},\n                {label: 'Estonia', value: 'EE'},\n                {label: 'Ethiopia', value: 'ET'},\n                {label: 'Falkland Islands (Malvinas)', value: 'FK'},\n                {label: 'Faroe Islands', value: 'FO'},\n                {label: 'Fiji', value: 'FJ'},\n                {label: 'Finland', value: 'FI'},\n                {label: 'France', value: 'FR'},\n                {label: 'French Guiana', value: 'GF'},\n                {label: 'French Polynesia', value: 'PF'},\n                {label: 'French Southern Territories', value: 'TF'},\n                {label: 'Gabon', value: 'GA'},\n                {label: 'Gambia', value: 'GM'},\n                {label: 'Georgia', value: 'GE'},\n                {label: 'Germany', value: 'DE'},\n                {label: 'Ghana', value: 'GH'},\n                {label: 'Gibraltar', value: 'GI'},\n                {label: 'Greece', value: 'GR'},\n                {label: 'Greenland', value: 'GL'},\n                {label: 'Grenada', value: 'GD'},\n                {label: 'Guadeloupe', value: 'GP'},\n                {label: 'Guam', value: 'GU'},\n                {label: 'Guatemala', value: 'GT'},\n                {label: 'Guernsey', value: 'GG'},\n                {label: 'Guinea', value: 'GN'},\n                {label: 'Guinea-Bissau', value: 'GW'},\n                {label: 'Guyana', value: 'GY'},\n                {label: 'Haiti', value: 'HT'},\n                {label: 'Heard Island and Mcdonald Islands', value: 'HM'},\n                {label: 'Holy See (Vatican City State)', value: 'VA'},\n                {label: 'Honduras', value: 'HN'},\n                {label: 'Hong Kong', value: 'HK'},\n                {label: 'Hungary', value: 'HU'},\n                {label: 'Iceland', value: 'IS'},\n                {label: 'India', value: 'IN'},\n                {label: 'Indonesia', value: 'ID'},\n                {label: 'Iran, Islamic Republic Of', value: 'IR'},\n                {label: 'Iraq', value: 'IQ'},\n                {label: 'Ireland', value: 'IE'},\n                {label: 'Isle of Man', value: 'IM'},\n                {label: 'Israel', value: 'IL'},\n                {label: 'Italy', value: 'IT'},\n                {label: 'Jamaica', value: 'JM'},\n                {label: 'Japan', value: 'JP'},\n                {label: 'Jersey', value: 'JE'},\n                {label: 'Jordan', value: 'JO'},\n                {label: 'Kazakhstan', value: 'KZ'},\n                {label: 'Kenya', value: 'KE'},\n                {label: 'Kiribati', value: 'KI'},\n                {label: 'Korea, Democratic People\\'S Republic of', value: 'KP'},\n                {label: 'Korea, Republic of', value: 'KR'},\n                {label: 'Kuwait', value: 'KW'},\n                {label: 'Kyrgyzstan', value: 'KG'},\n                {label: 'Lao People\\'S Democratic Republic', value: 'LA'},\n                {label: 'Latvia', value: 'LV'},\n                {label: 'Lebanon', value: 'LB'},\n                {label: 'Lesotho', value: 'LS'},\n                {label: 'Liberia', value: 'LR'},\n                {label: 'Libyan Arab Jamahiriya', value: 'LY'},\n                {label: 'Liechtenstein', value: 'LI'},\n                {label: 'Lithuania', value: 'LT'},\n                {label: 'Luxembourg', value: 'LU'},\n                {label: 'Macao', value: 'MO'},\n                {label: 'Macedonia, The Former Yugoslav Republic of', value: 'MK'},\n                {label: 'Madagascar', value: 'MG'},\n                {label: 'Malawi', value: 'MW'},\n                {label: 'Malaysia', value: 'MY'},\n                {label: 'Maldives', value: 'MV'},\n                {label: 'Mali', value: 'ML'},\n                {label: 'Malta', value: 'MT'},\n                {label: 'Marshall Islands', value: 'MH'},\n                {label: 'Martinique', value: 'MQ'},\n                {label: 'Mauritania', value: 'MR'},\n                {label: 'Mauritius', value: 'MU'},\n                {label: 'Mayotte', value: 'YT'},\n                {label: 'Mexico', value: 'MX'},\n                {label: 'Micronesia, Federated States of', value: 'FM'},\n                {label: 'Moldova, Republic of', value: 'MD'},\n                {label: 'Monaco', value: 'MC'},\n                {label: 'Mongolia', value: 'MN'},\n                {label: 'Montserrat', value: 'MS'},\n                {label: 'Morocco', value: 'MA'},\n                {label: 'Mozambique', value: 'MZ'},\n                {label: 'Myanmar', value: 'MM'},\n                {label: 'Namibia', value: 'NA'},\n                {label: 'Nauru', value: 'NR'},\n                {label: 'Nepal', value: 'NP'},\n                {label: 'Netherlands', value: 'NL'},\n                {label: 'Netherlands Antilles', value: 'AN'},\n                {label: 'New Caledonia', value: 'NC'},\n                {label: 'New Zealand', value: 'NZ'},\n                {label: 'Nicaragua', value: 'NI'},\n                {label: 'Niger', value: 'NE'},\n                {label: 'Nigeria', value: 'NG'},\n                {label: 'Niue', value: 'NU'},\n                {label: 'Norfolk Island', value: 'NF'},\n                {label: 'Northern Mariana Islands', value: 'MP'},\n                {label: 'Norway', value: 'NO'},\n                {label: 'Oman', value: 'OM'},\n                {label: 'Pakistan', value: 'PK'},\n                {label: 'Palau', value: 'PW'},\n                {label: 'Palestinian Territory, Occupied', value: 'PS'},\n                {label: 'Panama', value: 'PA'},\n                {label: 'Papua New Guinea', value: 'PG'},\n                {label: 'Paraguay', value: 'PY'},\n                {label: 'Peru', value: 'PE'},\n                {label: 'Philippines', value: 'PH'},\n                {label: 'Pitcairn', value: 'PN'},\n                {label: 'Poland', value: 'PL'},\n                {label: 'Portugal', value: 'PT'},\n                {label: 'Puerto Rico', value: 'PR'},\n                {label: 'Qatar', value: 'QA'},\n                {label: 'Reunion', value: 'RE'},\n                {label: 'Romania', value: 'RO'},\n                {label: 'Russian Federation', value: 'RU'},\n                {label: 'RWANDA', value: 'RW'},\n                {label: 'Saint Helena', value: 'SH'},\n                {label: 'Saint Kitts and Nevis', value: 'KN'},\n                {label: 'Saint Lucia', value: 'LC'},\n                {label: 'Saint Pierre and Miquelon', value: 'PM'},\n                {label: 'Saint Vincent and the Grenadines', value: 'VC'},\n                {label: 'Samoa', value: 'WS'},\n                {label: 'San Marino', value: 'SM'},\n                {label: 'Sao Tome and Principe', value: 'ST'},\n                {label: 'Saudi Arabia', value: 'SA'},\n                {label: 'Senegal', value: 'SN'},\n                {label: 'Serbia and Montenegro', value: 'CS'},\n                {label: 'Seychelles', value: 'SC'},\n                {label: 'Sierra Leone', value: 'SL'},\n                {label: 'Singapore', value: 'SG'},\n                {label: 'Slovakia', value: 'SK'},\n                {label: 'Slovenia', value: 'SI'},\n                {label: 'Solomon Islands', value: 'SB'},\n                {label: 'Somalia', value: 'SO'},\n                {label: 'South Africa', value: 'ZA'},\n                {label: 'South Georgia and the South Sandwich Islands', value: 'GS'},\n                {label: 'Spain', value: 'ES'},\n                {label: 'Sri Lanka', value: 'LK'},\n                {label: 'Sudan', value: 'SD'},\n                {label: 'Surilabel', value: 'SR'},\n                {label: 'Svalbard and Jan Mayen', value: 'SJ'},\n                {label: 'Swaziland', value: 'SZ'},\n                {label: 'Sweden', value: 'SE'},\n                {label: 'Switzerland', value: 'CH'},\n                {label: 'Syrian Arab Republic', value: 'SY'},\n                {label: 'Taiwan, Province of China', value: 'TW'},\n                {label: 'Tajikistan', value: 'TJ'},\n                {label: 'Tanzania, United Republic of', value: 'TZ'},\n                {label: 'Thailand', value: 'TH'},\n                {label: 'Timor-Leste', value: 'TL'},\n                {label: 'Togo', value: 'TG'},\n                {label: 'Tokelau', value: 'TK'},\n                {label: 'Tonga', value: 'TO'},\n                {label: 'Trinidad and Tobago', value: 'TT'},\n                {label: 'Tunisia', value: 'TN'},\n                {label: 'Turkey', value: 'TR'},\n                {label: 'Turkmenistan', value: 'TM'},\n                {label: 'Turks and Caicos Islands', value: 'TC'},\n                {label: 'Tuvalu', value: 'TV'},\n                {label: 'Uganda', value: 'UG'},\n                {label: 'Ukraine', value: 'UA'},\n                {label: 'United Arab Emirates', value: 'AE'},\n                {label: 'United Kingdom', value: 'GB'},\n                {label: 'United States', value: 'US'},\n                {label: 'United States Minor Outlying Islands', value: 'UM'},\n                {label: 'Uruguay', value: 'UY'},\n                {label: 'Uzbekistan', value: 'UZ'},\n                {label: 'Vanuatu', value: 'VU'},\n                {label: 'Venezuela', value: 'VE'},\n                {label: 'Viet Nam', value: 'VN'},\n                {label: 'Virgin Islands, British', value: 'VG'},\n                {label: 'Virgin Islands, U.S.', value: 'VI'},\n                {label: 'Wallis and Futuna', value: 'WF'},\n                {label: 'Western Sahara', value: 'EH'},\n                {label: 'Yemen', value: 'YE'},\n                {label: 'Zambia', value: 'ZM'},\n                {label: 'Zimbabwe', value: 'ZW'}\n            ]\n        };\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    setProfilePhoto = (e) => {\n        e.preventDefault();\n\n        const toBase64 = file => new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.saveResults = (imageResult) => {\n            this.setState({\n                profilePhoto: imageResult\n            });\n        };\n\n        async function covertToBase64() {\n            await toBase64(file).then(result => {\n                reader.saveResults(result)\n            });\n        };\n\n        covertToBase64();\n    };\n\n    removeProfilePhoto = (e) => {\n        this.setState({\n            profilePhoto: null\n        });\n    };\n\n    setCountry = (selected) => {\n        this.setState({ country: selected.value });\n    };\n\n    handleNextStep = (e) => {\n        e.preventDefault();\n\n        if(this.state.organizationTitle && !this.state.errors.organizationTitle) {\n            console.log(\">> S 1\");\n            axios.post('/api/users/completeStep1', {id: this.props.userID, meta: this.state}).then(result => {\n                console.log('>> completeStep1', result);\n                console.log('>> STEP1!', this.props.userID);\n                this.props.setUserStatus({ id: this.props.userID, status: 2});\n            }).catch(error => {\n                console.log('>> error', error);\n            });\n        } else {\n            console.log(\">> S 2\");\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    organizationTitle: true\n                }\n            });\n            window.scrollTo(0,0);\n        }\n\n    };\n\n    skipSteps = (e) => {\n        e.preventDefault();\n\n        this.props.setUserStatus({\n            id: this.props.userID,\n            status: 5\n        })\n    };\n\n    closeWarning = (e) => {\n        this.setState({\n            isWarningShows: !this.state.isWarningShows\n        });\n    };\n\n    handleKeyUp = (e) => {\n        console.log('>> E TARGET', e.target.value);\n        if (e.target.value.length > 3 && this.state.errors.organizationTitle) {\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    organizationTitle: false\n                }\n            });\n        }\n    };\n\n    handleChangePhone = (e) => {\n        console.log('>> Change Phone', e.target);\n    };\n\n    render() {\n        const customStyles = {\n            option: (provided, { data, isDisabled, isSelected, isFocused }) => ({\n                ...provided,\n                height: 40,\n                backgroundColor: isDisabled\n                    ? null\n                    : isSelected\n                        ? '#F4F8FF'\n                        : null,\n                color: isSelected ? '#162B5B' : isFocused ? '#3260CC' : '#162B5B',\n                paddingLeft: 19,\n                paddingRight: 19,\n            }),\n            valueContainer: (provided) => ({\n                ...provided,\n                height: 50,\n                fontSize: 16,\n                paddingLeft: 19,\n                paddingRight: 19,\n                borderColor: '#CCD3E3'\n            }),\n            container: (provided) => ({\n                ...provided,\n                fontSize: 16,\n                border: 'none !important',\n                borderColor: '#CCD3E3'\n            }),\n            control: (provided) => ({\n                ...provided,\n                borderBottom: '1px solid #CCD3E3 !important',\n                borderLeft: '1px solid #CCD3E3 !important',\n                borderTop: '1px solid #CCD3E3 !important',\n                borderRight: '1px solid #CCD3E3 !important',\n            }),\n            dropdownIndicator: (provided) => ({\n                ...provided,\n                padding: 0,\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }),\n            indicatorsContainer: (provided) => ({\n                ...provided,\n                width: 29,\n                position: 'relative',\n                right: 0,\n                borderLeft: '1px solid #CCD3E3',\n                backgroundColor: '#f5f6f9',\n                borderRadius: '0 4px 4px 0'\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                display: 'none !important'\n            }),\n            input: (provided) => ({\n                ...provided,\n                display: 'flex',\n                alignItems: 'center',\n                height: '100%',\n                padding: 0,\n                margin: 0\n            })\n        };\n\n        console.log(\">> DATA #1\", this.props.user);\n\n        return (\n            <React.Fragment>\n                <div className=\"authForm_head\">\n                    <div className=\"authForm_title\">Organization details</div>\n                    <p className={\"currentStep\"}>Step 1 of 4</p>\n                </div>\n                {\n                    this.state.isWarningShows\n                    ?\n                        ( <div className=\"authWarning\">\n                            <a\n                                className={\"close\"}\n                                onClick={this.closeWarning}\n                            >\n                                <img src={icons.CLOSE} alt=\"\"/>\n                            </a>\n                            <div className=\"col\">\n                                <div className=\"authWarning_title\">Welcome {this.props.user.firstName} {this.props.user.lastName}!  ðŸ‘‹ </div>\n                                <p>You confirmed the email address, and now we can complete your personal <br/>\n                                    and account settings. </p>\n                                <a className=\"link\"\n                                   onClick={this.skipSteps}\n                                >Skip all steps and do it later in the settings menu.</a>\n                            </div>\n                        </div> )\n                        : null\n                }\n                <div className=\"authForm_body authForm_steps\">\n                    <div className=\"authStep\">\n                        <div className=\"authStep_loadImage\">\n                            <div className=\"authStep_image\" style={{\n                                background: `url(${this.state.profilePhoto})`\n                            }}></div>\n                            {\n                                (!this.state.profilePhoto)\n                                    ? (\n                                        <a href=\"javascript:void(0);\" className={\"btn btn-blue btn-empty btn-loadFile\"}>\n                                            <span>Upload image</span>\n                                            <input type=\"file\" onChange={this.setProfilePhoto}/>\n                                        </a>\n                                    )\n                                    : (\n                                        <React.Fragment>\n                                            <a href=\"javascript:void(0);\" className={\"btn btn-blue btn-empty btn-loadFile\"}>\n                                                <span>Change image</span>\n                                                <input type=\"file\" onChange={this.setProfilePhoto}/>\n                                            </a>\n                                            <a href=\"javascript:void(0);\" className={\"link link-delete\"} onClick={this.removeProfilePhoto}>Delete image</a>\n                                        </React.Fragment>\n                                    )\n                            }\n\n                        </div>\n                    </div>\n                    <label>\n                        <span>Organization title <b>*</b></span>\n                        <input\n                            onChange={this.onChange}\n                            placeholder={\"\"}\n                            type={\"text\"}\n                            id={\"organizationTitle\"}\n                            onChange={this.onChange}\n                            onKeyUp={this.handleKeyUp}\n                            value={this.state.organizationTitle}\n                            className={this.state.errors.organizationTitle ? \"invalid\" : null}\n                        />\n                    </label>\n                    <label>\n                        <span>Country</span>\n                        <Select options={this.state.countries}\n                                styles={customStyles}\n                                onChange={this.setCountry}\n                        />\n                    </label>\n                    <label className={\"label50 label50-left\"}>\n                        <span>City</span>\n                        <input\n                            onChange={this.onChange}\n                            placeholder={\"Example: New York\"}\n                            type={\"text\"}\n                            id={\"city\"}\n                            value={this.state.city}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label className={\"label50 label50-right\"}>\n                        <span>ZIP / Postal code</span>\n                        <input\n                            onChange={this.onChange}\n                            placeholder={\"Example: 10111\"}\n                            type={\"text\"}\n                            id={\"zip\"}\n                            value={this.state.zip}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label>\n                        <span>Address</span>\n                        <input\n                            onChange={this.onChange}\n                            placeholder={\"Example: 45 Rockefeller Plaza\"}\n                            type={\"text\"}\n                            id={\"address\"}\n                            value={this.state.address}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label className={\"label50 label50-left\"}>\n                        <span>Phone number 1</span>\n                        <InputElement\n                            onChange={this.onChange}\n                            placeholder={\"Example: +1 212-332-6868\"}\n                            type={\"tel\"}\n                            mask=\"+9 999-999-9999\"\n                            id={\"phoneNumber1\"}\n                            onKeyUp={this.handleKeyUp}\n                            value={this.state.phoneNumber1}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label className={\"label50 label50-right\"}>\n                        <span>Phone number 2</span>\n                        <InputElement\n                            onChange={this.onChange}\n                            placeholder={\"Example: +1 212-332-6868\"}\n                            type={\"tel\"}\n                            mask=\"+9 999-999-9999\"\n                            id={\"phoneNumber2\"}\n                            onKeyUp={this.handleKeyUp}\n                            value={this.state.phoneNumber2}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label>\n                        <span>Website</span>\n                        <input\n                            onChange={this.onChange}\n                            placeholder={\"Example: www.yourwebsite.com\"}\n                            type={\"text\"}\n                            id={\"website\"}\n                            value={this.state.website}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <label className={\"labelTextarea\"}>\n                        <span>Description</span>\n                        <textarea\n                            id={\"accountDesc\"}\n                            value={this.state.accountDesc}\n                            onChange={this.onChange}\n                        />\n                    </label>\n                    <button\n                        className={\"btn btn-blue\"}\n                        onClick={this.handleNextStep}\n                    >\n                        Continue\n                    </button>\n                    <div className=\"stepActions\">\n                        <a className=\"stepActions_prev\"></a>\n                        <a className=\"stepActions_skip\"\n                           onClick={this.skipSteps}\n                        >Skip all steps</a>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    userID: state.authReducer.userID,\n    user: state.authReducer.user,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    setUserStatus: data => {\n        dispatch(setUserStatus(data))\n    },\n    requestUserData: data => {\n        dispatch(requestUserData(data))\n    }\n});\n\n\nexport default connect(mapState, mapDispatch)(Step1)"]},"metadata":{},"sourceType":"module"}