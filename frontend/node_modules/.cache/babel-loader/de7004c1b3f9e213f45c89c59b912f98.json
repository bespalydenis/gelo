{"ast":null,"code":"import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport { REQUEST_USERS, receiveUsers, ADD_USER, addUser, SET_CURRENT_USER } from '../actions';\nimport axios from 'axios';\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt from \"jsonwebtoken\"; // function* getUsers(action) {\n//     try {\n//         console.log('>> getUsers');\n//     } catch (err) {\n//         console.log('>> err', err)\n//     }\n// }\n// LOGIN + AUTH TOKEN\n\nfunction* userLogin() {}\n\nfunction fetchUnits(data) {\n  console.log('>>I', data); // return axios({\n  //    method: 'get',\n  //    url: '/api/users/units',\n  //     params: data\n  // });\n\n  let result = [];\n  axios.get('/api/users/units', data).then(data => {\n    console.log('>> Success', data);\n    result = data;\n  }).catch(e => {\n    console.log('>> Error', e);\n  });\n  return result;\n}\n\nfunction* getUsers(action) {\n  try {\n    const response = yield call(fetchUnits, action.data);\n    const units = response.data;\n    yield put(receiveUsers(units));\n  } catch (e) {\n    yield put(receiveUsers('Test was success! Error!'));\n  }\n}\n\nfunction* addNewUser(action) {\n  console.log('>> ANU');\n\n  try {\n    // const response = yield call(fetchUnits, action.data);\n    // const units = response.data;\n    // console.log('>> unitsGet', action, data);\n    // yield put(receiveUsers(units));\n    axios.post('/api/users/register', action.data).then(res => {\n      console.log('>> addUser', res);\n    }).catch(errors => {\n      if (errors.response) {\n        console.log('>> E2');\n      } else if (errors.request) {\n        console.log('E', errors.request);\n      } else {\n        console.log('Error', errors.message);\n      }\n    });\n  } catch (e) {\n    yield put(receiveUsers('Test was success! Error!'));\n  }\n}\n\nfunction* login(action) {\n  try {\n    let result;\n    axios.post('/api/users/login', {\n      email: action.data.email,\n      password: action.data.password\n    }).then(res => {\n      localStorage.setItem('jwtToken', res.data.token);\n      setAuthToken(res.data.token);\n      console.log('>> Login ID', res);\n    }).catch(err => {\n      console.log('>>', err);\n    });\n  } catch (e) {\n    console.log('>> Login Error', e);\n  }\n}\n\nfunction* watcher() {\n  yield takeLatest(REQUEST_USERS, getUsers);\n  yield takeLatest(ADD_USER, addNewUser);\n  yield takeLatest(SET_CURRENT_USER, login);\n}\n\nexport default function* saga() {\n  yield all([watcher()]);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/store/saga/index.js"],"names":["takeLatest","all","put","call","REQUEST_USERS","receiveUsers","ADD_USER","addUser","SET_CURRENT_USER","axios","setAuthToken","jwt","userLogin","fetchUnits","data","console","log","result","get","then","catch","e","getUsers","action","response","units","addNewUser","post","res","errors","request","message","login","email","password","localStorage","setItem","token","err","watcher","saga"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport {REQUEST_USERS, receiveUsers, ADD_USER, addUser, SET_CURRENT_USER} from '../actions';\nimport axios from 'axios'\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt from \"jsonwebtoken\";\n\n// function* getUsers(action) {\n//     try {\n//         console.log('>> getUsers');\n//     } catch (err) {\n//         console.log('>> err', err)\n//     }\n// }\n\n// LOGIN + AUTH TOKEN\nfunction* userLogin() {\n\n}\n\nfunction fetchUnits(data) {\n    console.log('>>I', data);\n    // return axios({\n    //    method: 'get',\n    //    url: '/api/users/units',\n    //     params: data\n    // });\n\n    let result = [];\n\n    axios.get('/api/users/units', data).then(data => {\n        console.log('>> Success', data);\n        result = data;\n    }).catch(e => {\n       console.log('>> Error', e);\n    });\n\n    return result;\n}\n\nfunction* getUsers(action) {\n    try {\n        const response = yield call(fetchUnits, action.data);\n        const units = response.data;\n        yield put(receiveUsers(units));\n    } catch(e) {\n        yield put(receiveUsers('Test was success! Error!'));\n    }\n}\n\nfunction* addNewUser(action) {\n    console.log('>> ANU');\n    try {\n        // const response = yield call(fetchUnits, action.data);\n        // const units = response.data;\n        // console.log('>> unitsGet', action, data);\n        // yield put(receiveUsers(units));\n\n        axios.post('/api/users/register', action.data)\n            .then(res => {\n                console.log('>> addUser', res);\n            })\n            .catch(errors => {\n                if (errors.response) {\n                   console.log('>> E2');\n                } else if (errors.request) {\n                    console.log('E', errors.request);\n                } else {\n                    console.log('Error', errors.message);\n                }\n            })\n    } catch(e) {\n        yield put(receiveUsers('Test was success! Error!'));\n    }\n}\n\nfunction* login(action) {\n    try {\n        let result;\n        axios.post('/api/users/login', {email: action.data.email, password: action.data.password})\n            .then(res => {\n                localStorage.setItem('jwtToken', res.data.token);\n                setAuthToken(res.data.token);\n                console.log('>> Login ID', res);\n            })\n            .catch(err => {\n                console.log('>>',err)\n            })\n    } catch(e) {\n        console.log('>> Login Error', e);\n    }\n}\n\n\nfunction* watcher() {\n    yield takeLatest(REQUEST_USERS, getUsers);\n    yield takeLatest(ADD_USER, addNewUser);\n    yield takeLatest(SET_CURRENT_USER, login);\n}\n\nexport default function* saga() {\n    yield all([watcher()]);\n}"]},"metadata":{},"sourceType":"module"}