{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Units/CreateUnit/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { requestUsers, addUser } from \"../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass CreateUnit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.setFirstName = e => {\n      this.setState({\n        firstName: e.target.value\n      });\n    };\n\n    this.setSecondName = e => {\n      this.setState({\n        secondName: e.target.value\n      });\n    };\n\n    this.setEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.setPassword = () => {\n      this.setState({\n        password: this.state.password\n      });\n    };\n\n    this.setConfirmPassword = () => {\n      this.setState({\n        password2: this.state.password2\n      });\n    };\n\n    this.createUnit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: \"\".concat(this.state.firstName, \" \").concat(this.state.secondName),\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2,\n        level: 1,\n        access: 1,\n        rights: 0,\n        parent: this.props.user.email\n      };\n      this.props.addUser(newUser);\n      this.props.requestUsers(this.props.user.email); // axios.post('/api/users/register', newUser)\n      //     .then(res => {\n      //         console.log('>> res', res);\n      //\n      //     })\n      //     .catch(errors => {\n      //         if (errors.response) {\n      //             this.setState({\n      //                 errors: errors.response.data\n      //             });\n      //         } else if (errors.request) {\n      //             console.log('E', errors.request);\n      //         } else {\n      //             console.log('Error', errors.message);\n      //         }\n      //     })\n    };\n\n    this.state = {\n      firstName: null,\n      secondName: null,\n      email: null,\n      password: null,\n      password2: null\n    };\n  }\n\n  render() {\n    console.log('>> Render Units', this.props.units);\n    return React.createElement(\"div\", {\n      className: \"createUnit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Create New Unit\"), React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.createUnit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"First Name\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setFirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Second Name\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setSecondName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Email\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Confirm password\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setConfirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Create New Unit\")));\n  }\n\n}\n\nconst mapState = state => ({\n  units: state.authReducer.units,\n  user: state.authReducer.user\n});\n\nconst mapDispatch = dispatch => ({\n  requestUsers: data => {\n    dispatch(requestUsers(data));\n  },\n  addUser: data => {\n    dispatch(addUser(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(CreateUnit);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Units/CreateUnit/index.js"],"names":["React","Component","axios","requestUsers","addUser","connect","CreateUnit","constructor","props","componentDidMount","setState","isLoading","setFirstName","e","firstName","target","value","setSecondName","secondName","setEmail","email","setPassword","password","state","setConfirmPassword","password2","createUnit","preventDefault","newUser","name","level","access","rights","parent","user","render","console","log","units","mapState","authReducer","mapDispatch","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {requestUsers, addUser} from \"../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass CreateUnit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: null,\n            secondName: null,\n            email: null,\n            password: null,\n            password2: null\n        }\n    }\n\n    componentDidMount = async() => {\n        this.setState({ isLoading: true });\n    };\n\n    setFirstName = (e) => {\n      this.setState({\n          firstName: e.target.value\n      });\n    };\n\n    setSecondName = (e) => {\n        this.setState({\n            secondName: e.target.value\n        });\n    };\n\n    setEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        });\n    };\n\n    setPassword = () => {\n        this.setState({\n            password: this.state.password\n        })\n    };\n\n    setConfirmPassword = () => {\n        this.setState({\n            password2: this.state.password2\n        })\n    };\n\n    createUnit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: `${this.state.firstName} ${this.state.secondName}`,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2,\n            level: 1,\n            access: 1,\n            rights: 0,\n            parent: this.props.user.email\n        };\n\n        this.props.addUser(newUser);\n        this.props.requestUsers(this.props.user.email);\n\n        // axios.post('/api/users/register', newUser)\n        //     .then(res => {\n        //         console.log('>> res', res);\n        //\n        //     })\n        //     .catch(errors => {\n        //         if (errors.response) {\n        //             this.setState({\n        //                 errors: errors.response.data\n        //             });\n        //         } else if (errors.request) {\n        //             console.log('E', errors.request);\n        //         } else {\n        //             console.log('Error', errors.message);\n        //         }\n        //     })\n    };\n\n\n    render(){\n        console.log('>> Render Units', this.props.units);\n        return (\n            <div className=\"createUnit\">\n                <h2>Create New Unit</h2>\n                <form action=\"\" onSubmit={this.createUnit}>\n                    <label>\n                        First Name\n                        <input type=\"text\" onChange={this.setFirstName} />\n                    </label>\n                    <label>\n                        Second Name\n                        <input type=\"text\" onChange={this.setSecondName} />\n                    </label>\n                    <label>\n                        Email\n                        <input type=\"text\" onChange={this.setEmail} />\n                    </label>\n                    <label>\n                        Password\n                        <input type=\"text\" onChange={this.setPassword} />\n                    </label>\n                    <label>\n                        Confirm password\n                        <input type=\"text\" onChange={this.setConfirmPassword} />\n                    </label>\n                    <button className={\"btn\"} type={\"submit\"}>Create New Unit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapState = state => ({\n    units: state.authReducer.units,\n    user: state.authReducer.user\n});\n\nconst mapDispatch = (dispatch) => ({\n    requestUsers: data => {\n        dispatch(requestUsers(data))\n    },\n    addUser: data => {\n        dispatch(addUser(data))\n    }\n});\n\nexport default connect(mapState, mapDispatch)(CreateUnit)"]},"metadata":{},"sourceType":"module"}