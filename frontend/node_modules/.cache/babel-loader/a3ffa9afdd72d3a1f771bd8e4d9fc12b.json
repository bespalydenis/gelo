{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/raps/gelo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { RECEIVE_USERS, SET_CURRENT_USER, ADD_USER, LOGIN, LOGIN_SUCCESS } from '../actions';\n\nconst isEmpty = require('is-empty');\n\nconst initState = {\n  isLoggedIn: false,\n  currentUser: 'admin?',\n  user: {},\n  units: [''],\n  access: 0,\n  loading: false\n};\nexport default ((state = initState, {\n  type,\n  data = \"default\"\n}) => {\n  switch (type) {\n    case RECEIVE_USERS:\n      return _objectSpread({}, state, {\n        // isLoggedIn: !isEmpty(action.payload),\n        units: data\n      });\n\n    case SET_CURRENT_USER:\n      console.log('>> Data SCU', data);\n      return _objectSpread({}, state, {\n        // isLoggedIn: !isEmpty(action.payload),\n        user: data,\n        isLoggedIn: true,\n        userID: data.id\n      });\n\n    case LOGIN:\n      console.log('>> reducer Login', data);\n      return _objectSpread({}, state, {\n        // isLoggedIn: !isEmpty(action.payload),\n        userID: data.id\n      });\n\n    case LOGIN_SUCCESS:\n      console.log('>> reducer login_success', data);\n      return _objectSpread({}, state, {\n        isLoggedIn: true\n      });\n\n    case ADD_USER:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n    //\n    // case USER_LOADING:\n    //     return {\n    //         ...state,\n    //         loading: true\n    //     };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/store/reducers/authReducer.js"],"names":["RECEIVE_USERS","SET_CURRENT_USER","ADD_USER","LOGIN","LOGIN_SUCCESS","isEmpty","require","initState","isLoggedIn","currentUser","user","units","access","loading","state","type","data","console","log","userID","id"],"mappings":";AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,QAAzC,EAAmDC,KAAnD,EAA0DC,aAA1D,QAA8E,YAA9E;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,KADE;AAEdC,EAAAA,WAAW,EAAE,QAFC;AAGdC,EAAAA,IAAI,EAAE,EAHQ;AAIdC,EAAAA,KAAK,EAAE,CAAC,EAAD,CAJO;AAKdC,EAAAA,MAAM,EAAE,CALM;AAMdC,EAAAA,OAAO,EAAE;AANK,CAAlB;AASA,gBAAe,CAACC,KAAK,GAAGP,SAAT,EAAoB;AAACQ,EAAAA,IAAD;AAAOC,EAAAA,IAAI,GAAG;AAAd,CAApB,KAAiD;AAC5D,UAAQD,IAAR;AACI,SAAKf,aAAL;AACI,+BACOc,KADP;AAEI;AACAH,QAAAA,KAAK,EAAEK;AAHX;;AAMJ,SAAKf,gBAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACA,+BACOF,KADP;AAEI;AACAJ,QAAAA,IAAI,EAAEM,IAHV;AAIIR,QAAAA,UAAU,EAAE,IAJhB;AAKIW,QAAAA,MAAM,EAAEH,IAAI,CAACI;AALjB;;AAQJ,SAAKjB,KAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACA,+BACOF,KADP;AAEI;AACAK,QAAAA,MAAM,EAAEH,IAAI,CAACI;AAHjB;;AAMJ,SAAKhB,aAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,IAAxC;AACA,+BACOF,KADP;AAEIN,QAAAA,UAAU,EAAE;AAFhB;;AAKJ,SAAKN,QAAL;AACI,+BACOY,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;AAIJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACI,aAAOC,KAAP;AA9CR;AAgDH,CAjDD","sourcesContent":["import {RECEIVE_USERS, SET_CURRENT_USER, ADD_USER, LOGIN, LOGIN_SUCCESS} from '../actions';\n\nconst isEmpty = require('is-empty');\n\nconst initState = {\n    isLoggedIn: false,\n    currentUser: 'admin?',\n    user: {},\n    units: [''],\n    access: 0,\n    loading: false,\n};\n\nexport default (state = initState, {type, data = \"default\"}) => {\n    switch (type) {\n        case RECEIVE_USERS:\n            return {\n                ...state,\n                // isLoggedIn: !isEmpty(action.payload),\n                units: data\n            };\n\n        case SET_CURRENT_USER:\n            console.log('>> Data SCU', data);\n            return {\n                ...state,\n                // isLoggedIn: !isEmpty(action.payload),\n                user: data,\n                isLoggedIn: true,\n                userID: data.id\n            };\n\n        case LOGIN:\n            console.log('>> reducer Login', data);\n            return {\n                ...state,\n                // isLoggedIn: !isEmpty(action.payload),\n                userID: data.id\n            };\n\n        case LOGIN_SUCCESS:\n            console.log('>> reducer login_success', data);\n            return {\n                ...state,\n                isLoggedIn: true\n            };\n\n        case ADD_USER:\n            return {\n                ...state,\n                loading: false,\n            };\n        //\n        // case USER_LOADING:\n        //     return {\n        //         ...state,\n        //         loading: true\n        //     };\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}