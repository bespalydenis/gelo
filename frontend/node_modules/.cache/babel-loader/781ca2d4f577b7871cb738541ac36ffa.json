{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Register.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as icons from '../../assets';\nimport './index.scss';\nimport classnames from \"classnames\";\nimport { addUser } from \"../../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport OAuth from './OAuth.js';\nimport { GoogleLogin } from \"react-google-login\";\nimport axios from \"axios\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      function validateEmail(email) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n\n      if (validateEmail(this.state.email)) {\n        this.setState({\n          isValidEmail: true\n        });\n      } else {\n        this.setState({\n          isValidEmail: false\n        });\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n        rights: 2,\n        status: 0\n      }; // if(this.state.firstName) {\n      //     this.setState({\n      //        errors: {\n      //            ...this.state.errors,\n      //            firstName: ''\n      //        }\n      //     });\n      // }\n\n      this.props.addUser(newUser);\n    };\n\n    this.showPassword = e => {\n      this.setState({\n        isPasswordShow: !this.state.isPasswordShow\n      });\n    };\n\n    this.generator = () => {\n      let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n      let string_length = 8;\n      let randomstring = '';\n      let charCount = 0;\n      let numCount = 0;\n\n      for (var i = 0; i < string_length; i++) {\n        if (Math.floor(Math.random() * 2) == 0 && numCount < 3 || charCount >= 5) {\n          let rnum = Math.floor(Math.random() * 10);\n          randomstring += rnum;\n          numCount += 1;\n        } else {\n          let rnum = Math.floor(Math.random() * chars.length);\n          randomstring += chars.substring(rnum, rnum + 1);\n          charCount += 1;\n        }\n      }\n\n      return randomstring;\n    };\n\n    this.responseGoogle = response => {\n      const password = this.generator();\n      const newUser = {\n        firstName: response.profileObj.givenName,\n        lastName: response.profileObj.familyName,\n        email: response.profileObj.email,\n        password: password,\n        rights: 2,\n        status: 0\n      };\n      this.props.addUser(newUser);\n      console.log('>> newUser', response);\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {},\n      isPasswordShow: false\n    };\n  }\n\n  render() {\n    const errors = this.props.errors;\n    if (this.props.isLoggedIn) window.location.href = './';\n    return React.createElement(\"section\", {\n      className: \"auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cols\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col col2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"authForm_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"authForm_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Already have an account?\"), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Login!\"))), React.createElement(\"form\", {\n      className: \"authForm_body\",\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label50 label50-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.firstName,\n      placeholder: \"Your first name\",\n      id: \"firstName\",\n      className: classnames(\"\", {\n        invalid: this.state.errors && this.state.errors.firstName\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), errors && errors.firstName ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Email not found\") : null), React.createElement(\"label\", {\n      className: \"label50 label50-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.lastName,\n      placeholder: \"Your last name\",\n      id: \"lastName\",\n      className: classnames(\"\", {\n        invalid: errors && errors.lastName\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), errors && errors.lastName ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Email not found\") : null), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors && errors.email,\n      placeholder: \"Your working email\",\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors && errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), errors && errors.email ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"That address is already in use. \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Log in\")) : React.createElement(\"p\", {\n      className: \"labelInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"We'll sent confirmation link on this address\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors && errors.password,\n      id: \"password\",\n      placeholder: \"I know, it's our secret\",\n      type: this.state.isPasswordShow ? \"text\" : \"password\",\n      className: classnames(\"\", {\n        invalid: errors && errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), errors && errors.password ? React.createElement(\"p\", {\n      className: \"labelError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Oops. That password isn't right. \", React.createElement(\"a\", {\n      href: \"\",\n      className: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Recover your password?\")) : null, React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      className: \"showPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons.EYE,\n      alt: \"\",\n      className: \"labelIcon\",\n      onClick: this.showPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"authForm_checkinfo authForm_checkinfo-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"By clicking \\u2018\\u2019Continue\\u2019\\u2019 I agree to Service name \", React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Terms of Use\"), \" and \", React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Privacy Policy\"))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: this.state.isValidEmail ? \"btn btn-blue\" : \"btn btn-blue btn-disabled\",\n      disabled: !this.state.isValidEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"button\", {\n      className: \"btn btn-google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: icons.GOOGLE,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), \"Sign up with Google\"), React.createElement(GoogleLogin, {\n      clientId: \"588274163618-8bl29h1f62m0hh4gv9dj2k9mg02acvuj.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapState = state => ({\n  currentUser: state.authReducer.currentUser,\n  isLoggedIn: state.authReducer.isLoggedIn,\n  userInfo: state.authReducer.user,\n  errors: state.authReducer.errors\n});\n\nconst mapDispatch = dispatch => ({\n  addUser: data => {\n    dispatch(addUser(data));\n  }\n});\n\nexport default connect(mapState, mapDispatch)(Register);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/raps/gelo/frontend/src/components/Auth/Register.js"],"names":["React","Component","connect","icons","classnames","addUser","Link","OAuth","GoogleLogin","axios","Register","constructor","props","onChange","e","setState","target","id","value","validateEmail","email","re","test","state","isValidEmail","onSubmit","preventDefault","newUser","firstName","lastName","password","rights","status","showPassword","isPasswordShow","generator","chars","string_length","randomstring","charCount","numCount","i","Math","floor","random","rnum","length","substring","responseGoogle","response","profileObj","givenName","familyName","console","log","errors","render","isLoggedIn","window","location","href","invalid","EYE","GOOGLE","mapState","currentUser","authReducer","userInfo","user","mapDispatch","dispatch","data"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as icons from '../../assets';\nimport './index.scss';\nimport classnames from \"classnames\";\nimport {addUser} from \"../../store/actions\";\nimport {Link} from \"react-router-dom\";\n\nimport OAuth from './OAuth.js';\nimport {GoogleLogin} from \"react-google-login\";\nimport axios from \"axios\";\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            errors: {},\n            isPasswordShow: false\n        };\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n\n        function validateEmail(email) {\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(email);\n        }\n\n        if(validateEmail(this.state.email)) {\n            this.setState({\n                isValidEmail: true\n            });\n        } else {\n            this.setState({\n                isValidEmail: false\n            });\n        }\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password,\n            rights: 2,\n            status: 0\n        };\n\n        // if(this.state.firstName) {\n        //     this.setState({\n        //        errors: {\n        //            ...this.state.errors,\n        //            firstName: ''\n        //        }\n        //     });\n        // }\n\n        this.props.addUser(newUser);\n    };\n\n    showPassword = (e) => {\n        this.setState({ isPasswordShow: !this.state.isPasswordShow });\n    };\n\n    generator = () => {\n        let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n        let string_length = 8;\n        let randomstring = '';\n        let charCount = 0;\n        let numCount = 0;\n\n        for (var i=0; i<string_length; i++) {\n            if((Math.floor(Math.random() * 2) == 0) && numCount < 3 || charCount >= 5) {\n                let rnum = Math.floor(Math.random() * 10);\n                randomstring += rnum;\n                numCount += 1;\n            } else {\n                let rnum = Math.floor(Math.random() * chars.length);\n                randomstring += chars.substring(rnum,rnum+1);\n                charCount += 1;\n            }\n        }\n\n        return randomstring;\n    };\n\n    responseGoogle = (response) => {\n        const password = this.generator();\n\n        const newUser = {\n            firstName: response.profileObj.givenName,\n            lastName: response.profileObj.familyName,\n            email: response.profileObj.email,\n            password: password,\n            rights: 2,\n            status: 0\n        };\n\n        this.props.addUser(newUser);\n        console.log('>> newUser', response);\n    };\n\n    render() {\n        const errors = this.props.errors;\n\n        if(this.props.isLoggedIn)\n            window.location.href = './';\n\n        return (\n            <section className={\"auth\"}>\n                <div className=\"wr\">\n                    <div className=\"cols\">\n                        <div className=\"col col1\">\n\n                        </div>\n                        <div className=\"col col2\">\n                            <div className=\"authForm\">\n                                <div className=\"authForm_head\">\n                                    <div className=\"authForm_title\">Sign Up</div>\n                                    <div className=\"authForm_info\">\n                                        <p>Already have an account?</p>\n                                        <Link to={\"/login\"}>Login!</Link>\n                                    </div>\n                                </div>\n                                <form className={\"authForm_body\"} noValidate onSubmit={this.onSubmit}>\n                                    <label className={\"label50 label50-left\"}>\n                                        <span>First name</span>\n                                        <input type=\"text\"\n                                               onChange={this.onChange}\n                                               value={this.state.firstName}\n                                               placeholder={\"Your first name\"}\n                                               id={\"firstName\"}\n                                               className={classnames(\"\", {\n                                                   invalid: this.state.errors && this.state.errors.firstName\n                                               })}\n                                        />\n                                        {\n                                            errors && errors.firstName ? <p className={\"labelError\"}>Email not found</p> : null\n                                        }\n                                    </label>\n                                    <label className={\"label50 label50-right\"}>\n                                        <span>Last name</span>\n                                        <input type=\"text\"\n                                               onChange={this.onChange}\n                                               value={this.state.lastName}\n                                               placeholder={\"Your last name\"}\n                                               id={\"lastName\"}\n                                               className={classnames(\"\", {\n                                                   invalid: errors && errors.lastName\n                                               })}\n                                        />\n                                        {\n                                            errors && errors.lastName ? <p className={\"labelError\"}>Email not found</p> : null\n                                        }\n                                    </label>\n                                    <label>\n                                        <span>Email</span>\n                                        <input\n                                            onChange={this.onChange}\n                                            value={this.state.email}\n                                            error={errors && errors.email}\n                                            placeholder={\"Your working email\"}\n                                            id={\"email\"}\n                                            type={\"email\"}\n                                            className={classnames(\"\", {\n                                                invalid: errors && errors.email\n                                            })}\n                                        />\n                                        {\n                                            errors && errors.email ? <p className={\"labelError\"}>That address is already in use. <Link to={\"/login\"}>Log in</Link></p> : <p className={\"labelInfo\"}>We'll sent confirmation link on this address</p>\n                                        }\n                                    </label>\n                                    <label>\n                                        <span>Password</span>\n                                        <input\n                                            onChange={this.onChange}\n                                            value={this.state.password}\n                                            error={errors && errors.password}\n                                            id={\"password\"}\n                                            placeholder={\"I know, it's our secret\"}\n                                            type={(this.state.isPasswordShow) ? \"text\" : \"password\"}\n                                            className={classnames(\"\", {\n                                                invalid: errors && errors.password\n                                            })}\n                                        />\n                                        {\n                                            errors && errors.password ? <p className={\"labelError\"}>Oops. That password isn't right. <a\n                                                href=\"\" className={\"link\"}>Recover your password?</a></p> : null\n                                        }\n                                        <a href=\"javascript:void(0);\" className={\"showPassword\"}>\n                                            <img src={icons.EYE} alt=\"\" className=\"labelIcon\" onClick={this.showPassword} />\n                                        </a>\n                                    </label>\n                                    <div className=\"authForm_checkinfo authForm_checkinfo-register\">\n                                        <p>By clicking ‘’Continue’’ I agree to Service name <a>Terms of Use</a> and <a>Privacy Policy</a></p>\n                                    </div>\n                                    <button\n                                        type={\"submit\"}\n                                        className={this.state.isValidEmail ? \"btn btn-blue\" : \"btn btn-blue btn-disabled\"}\n                                        disabled={!this.state.isValidEmail}\n                                    >\n                                        Continue\n                                    </button>\n                                    <button className=\"btn btn-google\">\n                                        <img src={icons.GOOGLE} alt=\"\"/>\n                                        Sign up with Google\n                                    </button>\n                                    <GoogleLogin\n                                        clientId=\"588274163618-8bl29h1f62m0hh4gv9dj2k9mg02acvuj.apps.googleusercontent.com\"\n                                        buttonText=\"Login\"\n                                        onSuccess={this.responseGoogle}\n                                        onFailure={this.responseGoogle}\n                                        cookiePolicy={'single_host_origin'}\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n\n    }\n}\n\nconst mapState = (state) => ({\n    currentUser: state.authReducer.currentUser,\n    isLoggedIn: state.authReducer.isLoggedIn,\n    userInfo: state.authReducer.user,\n    errors: state.authReducer.errors\n});\n\nconst mapDispatch = (dispatch) => ({\n    addUser: data => {\n        dispatch(addUser(data))\n    }\n});\n\nexport default connect(mapState, mapDispatch)(Register)"]},"metadata":{},"sourceType":"module"}